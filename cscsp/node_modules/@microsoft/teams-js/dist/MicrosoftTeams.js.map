{"version":3,"sources":["webpack://microsoftTeams/webpack/universalModuleDefinition","webpack://microsoftTeams/webpack/bootstrap","webpack://microsoftTeams/./src/internal/communication.ts","webpack://microsoftTeams/./src/internal/internalAPIs.ts","webpack://microsoftTeams/./src/public/constants.ts","webpack://microsoftTeams/./src/internal/handlers.ts","webpack://microsoftTeams/./src/internal/constants.ts","webpack://microsoftTeams/./src/internal/utils.ts","webpack://microsoftTeams/./src/public/interfaces.ts","webpack://microsoftTeams/./src/internal/globalVars.ts","webpack://microsoftTeams/./src/public/index.ts","webpack://microsoftTeams/./node_modules/uuid/lib/rng-browser.js","webpack://microsoftTeams/./node_modules/uuid/lib/bytesToUuid.js","webpack://microsoftTeams/./src/public/authentication.ts","webpack://microsoftTeams/./src/public/settings.ts","webpack://microsoftTeams/./src/private/logs.ts","webpack://microsoftTeams/./src/private/privateAPIs.ts","webpack://microsoftTeams/./src/public/menus.ts","webpack://microsoftTeams/./src/public/appWindow.ts","webpack://microsoftTeams/./src/public/media.ts","webpack://microsoftTeams/./src/internal/mediaUtil.ts","webpack://microsoftTeams/./src/index.ts","webpack://microsoftTeams/./src/private/index.ts","webpack://microsoftTeams/./src/private/bot.ts","webpack://microsoftTeams/./node_modules/uuid/index.js","webpack://microsoftTeams/./node_modules/uuid/v1.js","webpack://microsoftTeams/./node_modules/uuid/v4.js","webpack://microsoftTeams/./src/public/appInitialization.ts","webpack://microsoftTeams/./src/public/publicAPIs.ts","webpack://microsoftTeams/./src/public/navigation.ts","webpack://microsoftTeams/./src/public/tasks.ts","webpack://microsoftTeams/./src/public/location.ts","webpack://microsoftTeams/./src/public/meeting.ts","webpack://microsoftTeams/./src/public/monetization.ts","webpack://microsoftTeams/./src/public/people.ts","webpack://microsoftTeams/./src/public/video.ts","webpack://microsoftTeams/./src/public/sharing.ts","webpack://microsoftTeams/./src/public/stageView.ts","webpack://microsoftTeams/./src/private/interfaces.ts","webpack://microsoftTeams/./src/private/conversations.ts","webpack://microsoftTeams/./src/private/meetingRoom.ts","webpack://microsoftTeams/./src/private/remoteCamera.ts","webpack://microsoftTeams/./src/private/files.ts","webpack://microsoftTeams/./src/private/appEntity.ts","webpack://microsoftTeams/./src/private/teams.ts"],"names":[],"mappings":"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","file":"MicrosoftTeams.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"microsoftTeams\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microsoftTeams\"] = factory();\n\telse\n\t\troot[\"microsoftTeams\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { validOriginRegExp, version } from './constants';\nimport { GlobalVars } from './globalVars';\nimport { callHandler } from './handlers';\nimport { MessageResponse, MessageRequest, ExtendedWindow, DOMMessageEvent } from './interfaces';\n\nexport class Communication {\n  public static currentWindow: Window | any;\n  public static parentOrigin: string;\n  public static parentWindow: Window | any;\n  public static childWindow: Window;\n  public static childOrigin: string;\n}\n\nclass CommunicationPrivate {\n  public static parentMessageQueue: MessageRequest[] = [];\n  public static childMessageQueue: MessageRequest[] = [];\n  public static nextMessageId = 0;\n  public static callbacks: {\n    [id: number]: Function;\n  } = {};\n  public static messageListener: Function;\n}\n\nexport function initializeCommunication(callback: Function, validMessageOrigins: string[] | undefined): void {\n  // Listen for messages post to our window\n  CommunicationPrivate.messageListener = (evt: DOMMessageEvent): void => processMessage(evt);\n\n  // If we are in an iframe, our parent window is the one hosting us (i.e., window.parent); otherwise,\n  // it's the window that opened us (i.e., window.opener)\n  Communication.currentWindow = Communication.currentWindow || window;\n  Communication.parentWindow =\n    Communication.currentWindow.parent !== Communication.currentWindow.self\n      ? Communication.currentWindow.parent\n      : Communication.currentWindow.opener;\n\n  // Listen to messages from the parent or child frame.\n  // Frameless windows will only receive this event from child frames and if validMessageOrigins is passed.\n  if (Communication.parentWindow || validMessageOrigins) {\n    Communication.currentWindow.addEventListener('message', CommunicationPrivate.messageListener, false);\n  }\n\n  if (!Communication.parentWindow) {\n    GlobalVars.isFramelessWindow = true;\n    /* eslint-disable  @typescript-eslint/ban-ts-comment */\n    // @ts-ignore: window as ExtendedWindow\n    (window as ExtendedWindow).onNativeMessage = handleParentMessage;\n  }\n\n  try {\n    // Send the initialized message to any origin, because at this point we most likely don't know the origin\n    // of the parent window, and this message contains no data that could pose a security risk.\n    Communication.parentOrigin = '*';\n    sendMessageToParent('initialize', [version], callback);\n  } finally {\n    Communication.parentOrigin = null;\n  }\n}\n\nexport function uninitializeCommunication(): void {\n  Communication.currentWindow.removeEventListener('message', CommunicationPrivate.messageListener, false);\n\n  Communication.parentWindow = null;\n  Communication.parentOrigin = null;\n  Communication.childWindow = null;\n  Communication.childOrigin = null;\n  CommunicationPrivate.parentMessageQueue = [];\n  CommunicationPrivate.childMessageQueue = [];\n  CommunicationPrivate.nextMessageId = 0;\n  CommunicationPrivate.callbacks = {};\n}\n\n/**\n * Send a message to parent. Uses nativeInterface on mobile to communicate with parent context\n */\nexport function sendMessageToParent(actionName: string, callback?: Function): void;\n/**\n * Send a message to parent. Uses nativeInterface on mobile to communicate with parent context\n */\nexport function sendMessageToParent(actionName: string, args: any[], callback?: Function): void;\nexport function sendMessageToParent(actionName: string, argsOrCallback?: any[] | Function, callback?: Function): void {\n  let args: any[] | undefined;\n  if (argsOrCallback instanceof Function) {\n    callback = argsOrCallback;\n  } else if (argsOrCallback instanceof Array) {\n    args = argsOrCallback;\n  }\n\n  const targetWindow = Communication.parentWindow;\n  const request = createMessageRequest(actionName, args);\n  if (GlobalVars.isFramelessWindow) {\n    if (Communication.currentWindow && Communication.currentWindow.nativeInterface) {\n      (Communication.currentWindow as ExtendedWindow).nativeInterface.framelessPostMessage(JSON.stringify(request));\n    }\n  } else {\n    const targetOrigin = getTargetOrigin(targetWindow);\n\n    // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\n    // queue the message and send it after the origin is established\n    if (targetWindow && targetOrigin) {\n      targetWindow.postMessage(request, targetOrigin);\n    } else {\n      getTargetMessageQueue(targetWindow).push(request);\n    }\n  }\n\n  if (callback) {\n    CommunicationPrivate.callbacks[request.id] = callback;\n  }\n}\n\nfunction processMessage(evt: DOMMessageEvent): void {\n  // Process only if we received a valid message\n  if (!evt || !evt.data || typeof evt.data !== 'object') {\n    return;\n  }\n\n  // Process only if the message is coming from a different window and a valid origin\n  // valid origins are either a pre-known\n  const messageSource = evt.source || (evt.originalEvent && evt.originalEvent.source);\n  const messageOrigin = evt.origin || (evt.originalEvent && evt.originalEvent.origin);\n  if (!shouldProcessMessage(messageSource, messageOrigin)) {\n    return;\n  }\n\n  // Update our parent and child relationships based on this message\n  updateRelationships(messageSource, messageOrigin);\n\n  // Handle the message\n  if (messageSource === Communication.parentWindow) {\n    handleParentMessage(evt);\n  } else if (messageSource === Communication.childWindow) {\n    handleChildMessage(evt);\n  }\n}\n\n/**\n * Validates the message source and origin, if it should be processed\n */\nfunction shouldProcessMessage(messageSource: Window, messageOrigin: string): boolean {\n  // Process if message source is a different window and if origin is either in\n  // Teams' pre-known whitelist or supplied as valid origin by user during initialization\n  if (Communication.currentWindow && messageSource === Communication.currentWindow) {\n    return false;\n  } else if (\n    Communication.currentWindow &&\n    Communication.currentWindow.location &&\n    messageOrigin &&\n    messageOrigin === Communication.currentWindow.location.origin\n  ) {\n    return true;\n  } else if (\n    validOriginRegExp.test(messageOrigin.toLowerCase()) ||\n    (GlobalVars.additionalValidOriginsRegexp &&\n      GlobalVars.additionalValidOriginsRegexp.test(messageOrigin.toLowerCase()))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction updateRelationships(messageSource: Window, messageOrigin: string): void {\n  // Determine whether the source of the message is our parent or child and update our\n  // window and origin pointer accordingly\n  // For frameless windows (i.e mobile), there is no parent frame, so the message must be from the child.\n  if (\n    !GlobalVars.isFramelessWindow &&\n    (!Communication.parentWindow || Communication.parentWindow.closed || messageSource === Communication.parentWindow)\n  ) {\n    Communication.parentWindow = messageSource;\n    Communication.parentOrigin = messageOrigin;\n  } else if (\n    !Communication.childWindow ||\n    Communication.childWindow.closed ||\n    messageSource === Communication.childWindow\n  ) {\n    Communication.childWindow = messageSource;\n    Communication.childOrigin = messageOrigin;\n  }\n\n  // Clean up pointers to closed parent and child windows\n  if (Communication.parentWindow && Communication.parentWindow.closed) {\n    Communication.parentWindow = null;\n    Communication.parentOrigin = null;\n  }\n  if (Communication.childWindow && Communication.childWindow.closed) {\n    Communication.childWindow = null;\n    Communication.childOrigin = null;\n  }\n\n  // If we have any messages in our queue, send them now\n  flushMessageQueue(Communication.parentWindow);\n  flushMessageQueue(Communication.childWindow);\n}\n\nfunction handleParentMessage(evt: DOMMessageEvent): void {\n  if ('id' in evt.data && typeof evt.data.id === 'number') {\n    // Call any associated Communication.callbacks\n    const message = evt.data as MessageResponse;\n    const callback = CommunicationPrivate.callbacks[message.id];\n    if (callback) {\n      callback.apply(null, [...message.args, message.isPartialResponse]);\n\n      // Remove the callback to ensure that the callback is called only once and to free up memory if response is a complete response\n      if (!isPartialResponse(evt)) {\n        delete CommunicationPrivate.callbacks[message.id];\n      }\n    }\n  } else if ('func' in evt.data && typeof evt.data.func === 'string') {\n    // Delegate the request to the proper handler\n    const message = evt.data as MessageRequest;\n    callHandler(message.func, message.args);\n  }\n}\n\nfunction isPartialResponse(evt: DOMMessageEvent): boolean {\n  return evt.data.isPartialResponse === true;\n}\n\nfunction handleChildMessage(evt: DOMMessageEvent): void {\n  if ('id' in evt.data && 'func' in evt.data) {\n    // Try to delegate the request to the proper handler, if defined\n    const message = evt.data as MessageRequest;\n    const [called, result] = callHandler(message.func, message.args);\n    if (called && typeof result !== 'undefined') {\n      sendMessageResponseToChild(message.id, Array.isArray(result) ? result : [result]);\n    } else {\n      // No handler, proxy to parent\n      // tslint:disable-next-line:no-any\n      sendMessageToParent(message.func, message.args, (...args: any[]): void => {\n        if (Communication.childWindow) {\n          const isPartialResponse = args.pop();\n          sendMessageResponseToChild(message.id, args, isPartialResponse);\n        }\n      });\n    }\n  }\n}\n\nfunction getTargetMessageQueue(targetWindow: Window): MessageRequest[] {\n  return targetWindow === Communication.parentWindow\n    ? CommunicationPrivate.parentMessageQueue\n    : targetWindow === Communication.childWindow\n    ? CommunicationPrivate.childMessageQueue\n    : [];\n}\n\nfunction getTargetOrigin(targetWindow: Window): string {\n  return targetWindow === Communication.parentWindow\n    ? Communication.parentOrigin\n    : targetWindow === Communication.childWindow\n    ? Communication.childOrigin\n    : null;\n}\n\nfunction flushMessageQueue(targetWindow: Window | any): void {\n  const targetOrigin = getTargetOrigin(targetWindow);\n  const targetMessageQueue = getTargetMessageQueue(targetWindow);\n  while (targetWindow && targetOrigin && targetMessageQueue.length > 0) {\n    targetWindow.postMessage(targetMessageQueue.shift(), targetOrigin);\n  }\n}\n\nexport function waitForMessageQueue(targetWindow: Window, callback: () => void): void {\n  const messageQueueMonitor = Communication.currentWindow.setInterval(() => {\n    if (getTargetMessageQueue(targetWindow).length === 0) {\n      clearInterval(messageQueueMonitor);\n      callback();\n    }\n  }, 100);\n}\n\n/**\n * Send a response to child for a message request that was from child\n */\nfunction sendMessageResponseToChild(\n  id: number,\n  // tslint:disable-next-line:no-any\n  args?: any[],\n  isPartialResponse?: boolean,\n): void {\n  const targetWindow = Communication.childWindow;\n  const response = createMessageResponse(id, args, isPartialResponse);\n  const targetOrigin = getTargetOrigin(targetWindow);\n  if (targetWindow && targetOrigin) {\n    targetWindow.postMessage(response, targetOrigin);\n  }\n}\n\n/**\n * Send a custom message object that can be sent to child window,\n * instead of a response message to a child\n */\nexport function sendMessageEventToChild(\n  actionName: string,\n  // tslint:disable-next-line: no-any\n  args?: any[],\n): void {\n  const targetWindow = Communication.childWindow;\n  const customEvent = createMessageEvent(actionName, args);\n  const targetOrigin = getTargetOrigin(targetWindow);\n\n  // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\n  // queue the message and send it after the origin is established\n  if (targetWindow && targetOrigin) {\n    targetWindow.postMessage(customEvent, targetOrigin);\n  } else {\n    getTargetMessageQueue(targetWindow).push(customEvent);\n  }\n}\n\n// tslint:disable-next-line:no-any\nfunction createMessageRequest(func: string, args: any[]): MessageRequest {\n  return {\n    id: CommunicationPrivate.nextMessageId++,\n    func: func,\n    timestamp: Date.now(),\n    args: args || [],\n  };\n}\n\n// tslint:disable-next-line:no-any\nfunction createMessageResponse(id: number, args: any[], isPartialResponse: boolean): MessageResponse {\n  return {\n    id: id,\n    args: args || [],\n    isPartialResponse,\n  };\n}\n\n/**\n * Creates a message object without any id, used for custom actions being sent to child frame/window\n */\n// tslint:disable-next-line:no-any\nfunction createMessageEvent(func: string, args: any[]): MessageRequest {\n  return {\n    func: func,\n    args: args || [],\n  };\n}\n","import { HostClientType } from '../public/constants';\nimport { ErrorCode, SdkError } from '../public/interfaces';\nimport { userOriginUrlValidationRegExp, defaultSDKVersionForCompatCheck } from './constants';\nimport { GlobalVars } from './globalVars';\nimport { generateRegExpFromUrls, compareSDKVersions } from './utils';\n\nexport function ensureInitialized(...expectedFrameContexts: string[]): void {\n  if (!GlobalVars.initializeCalled) {\n    throw new Error('The library has not yet been initialized');\n  }\n\n  if (GlobalVars.frameContext && expectedFrameContexts && expectedFrameContexts.length > 0) {\n    let found = false;\n    for (let i = 0; i < expectedFrameContexts.length; i++) {\n      if (expectedFrameContexts[i] === GlobalVars.frameContext) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      throw new Error(\"This call is not allowed in the '\" + GlobalVars.frameContext + \"' context\");\n    }\n  }\n}\n\n/**\n * Checks whether the platform has knowledge of this API by doing a comparison\n * on API required version and platform supported version of the SDK\n * @param requiredVersion SDK version required by the API\n */\nexport function isAPISupportedByPlatform(requiredVersion: string = defaultSDKVersionForCompatCheck): boolean {\n  const value = compareSDKVersions(GlobalVars.clientSupportedSDKVersion, requiredVersion);\n  if (isNaN(value)) {\n    return false;\n  }\n  return value >= 0;\n}\n\n/**\n * Helper function to identify if host client is either android or ios\n */\nexport function isHostClientMobile(): boolean {\n  return GlobalVars.hostClientType == HostClientType.android || GlobalVars.hostClientType == HostClientType.ios;\n}\n\n/**\n * Helper function which indicates if current API is supported on mobile or not.\n * @returns SdkError if host client is not android/ios or if the requiredVersion is not\n *          supported by platform or not. Null is returned in case of success.\n */\nexport function isApiSupportedOnMobile(requiredVersion: string = defaultSDKVersionForCompatCheck): SdkError {\n  if (!isHostClientMobile()) {\n    const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\n    return notSupportedError;\n  } else if (!isAPISupportedByPlatform(requiredVersion)) {\n    const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n    return oldPlatformError;\n  }\n  return null;\n}\n\n/**\n * Processes the valid origins specifuied by the user, de-duplicates and converts them into a regexp\n * which is used later for message source/origin validation\n */\nexport function processAdditionalValidOrigins(validMessageOrigins: string[]): void {\n  let combinedOriginUrls = GlobalVars.additionalValidOrigins.concat(\n    validMessageOrigins.filter((_origin: string) => {\n      return typeof _origin === 'string' && userOriginUrlValidationRegExp.test(_origin);\n    }),\n  );\n  const dedupUrls: { [url: string]: boolean } = {};\n  combinedOriginUrls = combinedOriginUrls.filter(_originUrl => {\n    if (dedupUrls[_originUrl]) {\n      return false;\n    }\n    dedupUrls[_originUrl] = true;\n    return true;\n  });\n  GlobalVars.additionalValidOrigins = combinedOriginUrls;\n  if (GlobalVars.additionalValidOrigins.length > 0) {\n    GlobalVars.additionalValidOriginsRegexp = generateRegExpFromUrls(GlobalVars.additionalValidOrigins);\n  } else {\n    GlobalVars.additionalValidOriginsRegexp = null;\n  }\n}\n","export enum HostClientType {\n  desktop = 'desktop',\n  web = 'web',\n  android = 'android',\n  ios = 'ios',\n  ipados = 'ipados',\n  /**\n   * @deprecated Use teamsRoomsWindows instead.\n   */\n  rigel = 'rigel',\n  surfaceHub = 'surfaceHub',\n  teamsRoomsWindows = 'teamsRoomsWindows',\n  teamsRoomsAndroid = 'teamsRoomsAndroid',\n  teamsPhones = 'teamsPhones',\n  teamsDisplays = 'teamsDisplays',\n}\n\n// Ensure these declarations stay in sync with the framework.\nexport enum FrameContexts {\n  settings = 'settings',\n  content = 'content',\n  authentication = 'authentication',\n  remove = 'remove',\n  task = 'task',\n  sidePanel = 'sidePanel',\n  stage = 'stage',\n  meetingStage = 'meetingStage',\n}\n\n/**\n * Indicates the team type, currently used to distinguish between different team\n * types in Office 365 for Education (team types 1, 2, 3, and 4).\n */\nexport enum TeamType {\n  Standard = 0,\n  Edu = 1,\n  Class = 2,\n  Plc = 3,\n  Staff = 4,\n}\n\n/**\n * Indicates the various types of roles of a user in a team.\n */\nexport enum UserTeamRole {\n  Admin = 0,\n  User = 1,\n  Guest = 2,\n}\n\n/**\n * Task module dimension enum\n */\nexport enum TaskModuleDimension {\n  Large = 'large',\n  Medium = 'medium',\n  Small = 'small',\n}\n\n/**\n * The type of the channel with which the content is associated.\n */\nexport enum ChannelType {\n  Regular = 'Regular',\n  Private = 'Private',\n  Shared = 'Shared',\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { LoadContext, navigateBack } from '../public';\nimport { Communication, sendMessageEventToChild, sendMessageToParent } from './communication';\n\nclass HandlersPrivate {\n  public static handlers: {\n    [func: string]: Function;\n  } = {};\n  public static themeChangeHandler: (theme: string) => void;\n  public static backButtonPressHandler: () => boolean;\n  public static focusEnterHandler: (navigateForward: boolean) => void;\n  public static loadHandler: (context: LoadContext) => void;\n  public static beforeUnloadHandler: (readyToUnload: () => void) => boolean;\n}\n\nexport function initializeHandlers(): void {\n  // ::::::::::::::::::::MicrosoftTeams SDK Internal :::::::::::::::::\n  HandlersPrivate.handlers['themeChange'] = handleThemeChange;\n  HandlersPrivate.handlers['backButtonPress'] = handleBackButtonPress;\n  HandlersPrivate.handlers['load'] = handleLoad;\n  HandlersPrivate.handlers['beforeUnload'] = handleBeforeUnload;\n  HandlersPrivate.handlers['focusEnter'] = handleFocusEnter;\n}\n\nexport function callHandler(name: string, args?: any[]): [true, any] | [false, undefined] {\n  const handler = HandlersPrivate.handlers[name];\n  if (handler) {\n    const result = handler.apply(this, args);\n    return [true, result];\n  } else {\n    return [false, undefined];\n  }\n}\n\nexport function registerHandler(name: string, handler: Function, sendMessage = true, args: any[] = []): void {\n  if (handler) {\n    HandlersPrivate.handlers[name] = handler;\n    sendMessage && sendMessageToParent('registerHandler', [name, ...args]);\n  } else {\n    delete HandlersPrivate.handlers[name];\n  }\n}\n\nexport function removeHandler(name: string): void {\n  delete HandlersPrivate.handlers[name];\n}\n\nexport function registerOnThemeChangeHandler(handler: (theme: string) => void): void {\n  HandlersPrivate.themeChangeHandler = handler;\n  handler && sendMessageToParent('registerHandler', ['themeChange']);\n}\n\nexport function handleThemeChange(theme: string): void {\n  if (HandlersPrivate.themeChangeHandler) {\n    HandlersPrivate.themeChangeHandler(theme);\n  }\n\n  if (Communication.childWindow) {\n    sendMessageEventToChild('themeChange', [theme]);\n  }\n}\n\nexport function registerBackButtonHandler(handler: () => boolean): void {\n  HandlersPrivate.backButtonPressHandler = handler;\n  handler && sendMessageToParent('registerHandler', ['backButton']);\n}\n\nfunction handleBackButtonPress(): void {\n  if (!HandlersPrivate.backButtonPressHandler || !HandlersPrivate.backButtonPressHandler()) {\n    navigateBack();\n  }\n}\n\nexport function registerFocusEnterHandler(handler: (navigateForward: boolean) => void): void {\n  HandlersPrivate.focusEnterHandler = handler;\n  handler && sendMessageToParent('registerHandler', ['focusEnter']);\n}\n\nfunction handleFocusEnter(navigateForward: boolean): void {\n  if (HandlersPrivate.focusEnterHandler) {\n    HandlersPrivate.focusEnterHandler(navigateForward);\n  }\n}\n\nexport function registerOnLoadHandler(handler: (context: LoadContext) => void): void {\n  HandlersPrivate.loadHandler = handler;\n  handler && sendMessageToParent('registerHandler', ['load']);\n}\n\nfunction handleLoad(context: LoadContext): void {\n  if (HandlersPrivate.loadHandler) {\n    HandlersPrivate.loadHandler(context);\n  }\n\n  if (Communication.childWindow) {\n    sendMessageEventToChild('load', [context]);\n  }\n}\n\nexport function registerBeforeUnloadHandler(handler: (readyToUnload: () => void) => boolean): void {\n  HandlersPrivate.beforeUnloadHandler = handler;\n  handler && sendMessageToParent('registerHandler', ['beforeUnload']);\n}\n\nfunction handleBeforeUnload(): void {\n  const readyToUnload = (): void => {\n    sendMessageToParent('readyToUnload', []);\n  };\n\n  if (!HandlersPrivate.beforeUnloadHandler || !HandlersPrivate.beforeUnloadHandler(readyToUnload)) {\n    readyToUnload();\n  }\n}\n","import { generateRegExpFromUrls } from './utils';\n\nexport const version = '1.12.1';\n/**\n * The client version when all SDK APIs started to check platform compatibility for the APIs was 1.6.0.\n * Modified to 2.0.1 which is hightest till now so that if any client doesn't pass version in initialize function, it will be set to highest.\n * Mobile clients are passing versions, hence will be applicable to web and desktop clients only.\n */\nexport const defaultSDKVersionForCompatCheck = '2.0.1';\n\n/**\n * This is the client version when selectMedia API - VideoAndImage is supported on mobile.\n */\nexport const videoAndImageMediaAPISupportVersion = '2.0.2';\n\n/**\n * This is the client version when selectMedia API - Video with non-full screen mode is supported on mobile.\n */\nexport const nonFullScreenVideoModeAPISupportVersion = '2.0.3';\n\n/**\n * This is the client version when selectMedia API - ImageOutputFormats is supported on mobile.\n */\nexport const imageOutputFormatsAPISupportVersion = '2.0.4';\n\n/**\n * Minimum required client supported version for {@link getUserJoinedTeams} to be supported on {@link HostClientType.android}\n */\nexport const getUserJoinedTeamsSupportedAndroidClientVersion = '2.0.1';\n\n/**\n * This is the client version when location APIs (getLocation and showLocation) are supported.\n */\nexport const locationAPIsRequiredVersion = '1.9.0';\n\n/**\n * This is the client version when people picker API is supported on mobile.\n */\nexport const peoplePickerRequiredVersion = '2.0.0';\n\n/**\n * This is the client version when captureImage API is supported on mobile.\n */\nexport const captureImageMobileSupportVersion = '1.7.0';\n\n/**\n * This is the client version when media APIs are supported on all three platforms ios, android and web.\n */\nexport const mediaAPISupportVersion = '1.8.0';\n\n/**\n * This is the client version when getMedia API is supported via Callbacks on all three platforms ios, android and web.\n */\nexport const getMediaCallbackSupportVersion = '2.0.0';\n\n/**\n * This is the client version when scanBarCode API is supported on mobile.\n */\nexport const scanBarCodeAPIMobileSupportVersion = '1.9.0';\n\n/**\n * List of supported Host origins\n */\nexport const validOrigins = [\n  'https://teams.microsoft.com',\n  'https://teams.microsoft.us',\n  'https://gov.teams.microsoft.us',\n  'https://dod.teams.microsoft.us',\n  'https://int.teams.microsoft.com',\n  'https://teams.live.com',\n  'https://devspaces.skype.com',\n  'https://ssauth.skype.com',\n  'https://local.teams.live.com', // local development\n  'https://local.teams.live.com:8080', // local development\n  'https://local.teams.office.com', // local development\n  'https://local.teams.office.com:8080', // local development\n  'https://msft.spoppe.com',\n  'https://*.sharepoint.com',\n  'https://*.sharepoint-df.com',\n  'https://*.sharepointonline.com',\n  'https://outlook.office.com',\n  'https://outlook-sdf.office.com',\n  'https://*.teams.microsoft.com',\n  'https://www.office.com',\n  'https://word.office.com',\n  'https://excel.office.com',\n  'https://powerpoint.office.com',\n  'https://www.officeppe.com',\n  'https://*.www.office.com',\n];\n\nexport const validOriginRegExp = generateRegExpFromUrls(validOrigins);\n\n/**\n * USer specified message origins should satisfy this test\n */\nexport const userOriginUrlValidationRegExp = /^https\\:\\/\\//;\n","import * as uuid from 'uuid';\n// This will return a reg expression a given url\nfunction generateRegExpFromUrl(url: string): string {\n  let urlRegExpPart = '^';\n  const urlParts = url.split('.');\n  for (let j = 0; j < urlParts.length; j++) {\n    urlRegExpPart += (j > 0 ? '[.]' : '') + urlParts[j].replace('*', '[^/^.]+');\n  }\n  urlRegExpPart += '$';\n  return urlRegExpPart;\n}\n\n// This will return a reg expression for list of url\nexport function generateRegExpFromUrls(urls: string[]): RegExp {\n  let urlRegExp = '';\n  for (let i = 0; i < urls.length; i++) {\n    urlRegExp += (i === 0 ? '' : '|') + generateRegExpFromUrl(urls[i]);\n  }\n  return new RegExp(urlRegExp);\n}\n\nexport function getGenericOnCompleteHandler(errorMessage?: string): (success: boolean, reason?: string) => void {\n  return (success: boolean, reason: string): void => {\n    if (!success) {\n      throw new Error(errorMessage ? errorMessage : reason);\n    }\n  };\n}\n\n/**\n * Compares SDK versions.\n * @param v1 first version\n * @param v2 second version\n * returns NaN in case inputs are not in right format\n *         -1 if v1 < v2\n *          1 if v1 > v2\n *          0 otherwise\n * For example,\n *    compareSDKVersions('1.2', '1.2.0') returns 0\n *    compareSDKVersions('1.2a', '1.2b') returns NaN\n *    compareSDKVersions('1.2', '1.3') returns -1\n *    compareSDKVersions('2.0', '1.3.2') returns 1\n *    compareSDKVersions('2.0', 2.0) returns NaN\n */\nexport function compareSDKVersions(v1: string, v2: string): number {\n  if (typeof v1 !== 'string' || typeof v2 !== 'string') {\n    return NaN;\n  }\n\n  const v1parts = v1.split('.');\n  const v2parts = v2.split('.');\n\n  function isValidPart(x: string): boolean {\n    // input has to have one or more digits\n    // For ex - returns true for '11', false for '1a1', false for 'a', false for '2b'\n    return /^\\d+$/.test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n\n  // Make length of both parts equal\n  while (v1parts.length < v2parts.length) {\n    v1parts.push('0');\n  }\n  while (v2parts.length < v1parts.length) {\n    v2parts.push('0');\n  }\n\n  for (let i = 0; i < v1parts.length; ++i) {\n    if (Number(v1parts[i]) == Number(v2parts[i])) {\n      continue;\n    } else if (Number(v1parts[i]) > Number(v2parts[i])) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * Generates a GUID\n */\nexport function generateGUID(): string {\n  return uuid.v4();\n}\n","import { TaskModuleDimension, HostClientType, TeamType, UserTeamRole, ChannelType } from './constants';\nimport { FrameContexts } from './constants';\n\n/**\n * Represents information about tabs for an app\n */\nexport interface TabInformation {\n  teamTabs: TabInstance[];\n}\n\n/**\n * Represents information about a tab instance\n */\nexport interface TabInstance {\n  /**\n   * The name of the tab\n   */\n  tabName: string;\n\n  /**\n   * Internal: do not use\n   * @protected\n   */\n  internalTabInstanceId?: string;\n\n  /**\n   * Last viewed time of this tab. null means unknown\n   */\n  lastViewUnixEpochTime?: string;\n\n  /**\n   * The developer-defined unique ID for the entity this content points to.\n   */\n  entityId?: string;\n\n  /**\n   * The Microsoft Teams ID for the channel with which the content is associated.\n   */\n  channelId?: string;\n\n  /**\n   * The name for the channel with which the content is associated.\n   */\n  channelName?: string;\n\n  /**\n   * Is this tab in a favorite channel?\n   */\n  channelIsFavorite?: boolean;\n\n  /**\n   * The Microsoft Teams ID for the team with which the content is associated.\n   */\n  teamId?: string;\n\n  /**\n   * The name for the team with which the content is associated.\n   */\n  teamName?: string;\n\n  /**\n   * Is this tab in a favorite team?\n   */\n  teamIsFavorite?: boolean;\n\n  /**\n   * The Office 365 group ID for the team with which the content is associated.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  groupId?: string;\n\n  /**\n   * Content URL of this tab\n   */\n  url?: string;\n\n  /**\n   * Website URL of this tab\n   */\n  websiteUrl?: string;\n}\n\n/**\n * Indicates information about the tab instance for filtering purposes.\n */\nexport interface TabInstanceParameters {\n  /**\n   * Flag allowing to select favorite channels only\n   */\n  favoriteChannelsOnly?: boolean;\n\n  /**\n   * Flag allowing to select favorite teams only\n   */\n  favoriteTeamsOnly?: boolean;\n}\n\n/**\n * Represents Team Information\n */\nexport interface TeamInformation {\n  /**\n   * Id of the team\n   */\n  teamId: string;\n\n  /**\n   * Team display name\n   */\n  teamName: string;\n\n  /**\n   * Team description\n   */\n  teamDescription?: string;\n\n  /**\n   * Thumbnail Uri\n   */\n  thumbnailUri?: string;\n\n  /**\n   * The Office 365 group ID for the team with which the content is associated.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  groupId?: string;\n\n  /**\n   * Role of current user in the team\n   */\n  userTeamRole?: UserTeamRole;\n\n  /**\n   * The type of the team.\n   */\n  teamType?: TeamType;\n\n  /**\n   * The locked status of the team\n   */\n  isTeamLocked?: boolean;\n\n  /**\n   * The archived status of the team\n   */\n  isTeamArchived?: boolean;\n}\n\n/**\n * Represents OS locale info used for formatting date and time data\n */\nexport interface LocaleInfo {\n  platform: 'windows' | 'macos';\n  regionalFormat: string;\n  shortDate: string;\n  longDate: string;\n  shortTime: string;\n  longTime: string;\n}\n\n/**\n * Allowed user file open preferences\n */\nexport enum FileOpenPreference {\n  Inline = 'inline',\n  Desktop = 'desktop',\n  Web = 'web',\n}\n\nexport interface Context {\n  /**\n   * The Office 365 group ID for the team with which the content is associated.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  groupId?: string;\n\n  /**\n   * The Microsoft Teams ID for the team with which the content is associated.\n   */\n  teamId?: string;\n\n  /**\n   * The name for the team with which the content is associated.\n   */\n  teamName?: string;\n\n  /**\n   * The Microsoft Teams ID for the channel with which the content is associated.\n   */\n  channelId?: string;\n\n  /**\n   * The name for the channel with which the content is associated.\n   */\n  channelName?: string;\n\n  /**\n   * The type of the channel with which the content is associated.\n   */\n  channelType?: ChannelType;\n\n  /**\n   * The developer-defined unique ID for the entity this content points to.\n   */\n  entityId: string;\n\n  /**\n   * The developer-defined unique ID for the sub-entity this content points to.\n   * This field should be used to restore to a specific state within an entity,\n   * such as scrolling to or activating a specific piece of content.\n   */\n  subEntityId?: string;\n\n  /**\n   * The current locale that the user has configured for the app formatted as\n   * languageId-countryId (for example, en-us).\n   */\n  locale: string;\n\n  /**\n   * More detailed locale info from the user's OS if available. Can be used together with\n   * the @microsoft/globe NPM package to ensure your app respects the user's OS date and\n   * time format configuration\n   */\n  osLocaleInfo?: LocaleInfo;\n\n  /**\n   * @deprecated Use loginHint or userPrincipalName.\n   * The UPN of the current user.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  upn?: string;\n\n  /**\n   * The Azure AD tenant ID of the current user.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  tid?: string;\n\n  /**\n   * The current UI theme.\n   */\n  theme?: string;\n\n  /**\n   * Indication whether the tab is in full-screen mode.\n   */\n  isFullScreen?: boolean;\n\n  /**\n   * The type of the team.\n   */\n  teamType?: TeamType;\n\n  /**\n   * The root SharePoint site associated with the team.\n   */\n  teamSiteUrl?: string;\n\n  /**\n   * The domain of the root SharePoint site associated with the team.\n   */\n  teamSiteDomain?: string;\n\n  /**\n   * The relative path to the SharePoint site associated with the team.\n   */\n  teamSitePath?: string;\n\n  /**\n   * The tenant ID of the host team.\n   */\n  hostTeamTenantId?: string;\n\n  /**\n   * The AAD group ID of the host team.\n   */\n  hostTeamGroupId?: string;\n\n  /**\n   * The relative path to the SharePoint folder associated with the channel.\n   */\n  channelRelativeUrl?: string;\n\n  /**\n   * Unique ID for the current Teams session for use in correlating telemetry data.\n   */\n  sessionId?: string;\n\n  /**\n   * The user's role in the team.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to the user's role, and never as proof of her role.\n   */\n  userTeamRole?: UserTeamRole;\n\n  /**\n   * The Microsoft Teams ID for the chat with which the content is associated.\n   */\n  chatId?: string;\n\n  /**\n   * A value suitable for use as a login_hint when authenticating with Azure AD.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  loginHint?: string;\n\n  /**\n   * The UPN of the current user. This may be an externally-authenticated UPN (e.g., guest users).\n   * Because a malicious party run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  userPrincipalName?: string;\n\n  /**\n   * The Azure AD object id of the current user.\n   * Because a malicious party run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  userObjectId?: string;\n\n  /**\n   * Indicates whether team is archived.\n   * Apps should use this as a signal to prevent any changes to content associated with archived teams.\n   */\n  isTeamArchived?: boolean;\n\n  /**\n   * The type of the host client. Possible values are : android, ios, web, desktop, rigel(deprecated, use teamsRoomsWindows instead),\n   * surfaceHub, teamsRoomsWindows, teamsRoomsAndroid, teamsPhones, teamsDisplays\n   */\n  hostClientType?: HostClientType;\n\n  /**\n   * The context where tab url is loaded (content, task, setting, remove, sidePanel)\n   */\n  frameContext?: FrameContexts;\n\n  /**\n   * SharePoint context. This is only available when hosted in SharePoint.\n   */\n  sharepoint?: any;\n\n  /**\n   * The type of license for the current users tenant.\n   */\n  tenantSKU?: string;\n\n  /**\n   * The license type for the current user.\n   */\n  userLicenseType?: string;\n\n  /**\n   * The ID of the parent message from which this task module was launched.\n   * This is only available in task modules launched from bot cards.\n   */\n  parentMessageId?: string;\n\n  /**\n   * Current ring ID\n   */\n  ringId?: string;\n\n  /**\n   * Unique ID for the current session for use in correlating telemetry data.\n   */\n  appSessionId?: string;\n\n  /**\n   * ID for the current visible app which is different for across cached sessions. Used for correlating telemetry data``\n   */\n  appLaunchId?: string;\n\n  /**\n   * Represents whether calling is allowed for the current logged in User\n   */\n  isCallingAllowed?: boolean;\n\n  /**\n   * Represents whether PSTN calling is allowed for the current logged in User\n   */\n  isPSTNCallingAllowed?: boolean;\n\n  /**\n   * Meeting Id used by tab when running in meeting context\n   */\n  meetingId?: string;\n\n  /**\n   * The OneNote section ID that is linked to the channel.\n   */\n  defaultOneNoteSectionId?: string;\n\n  /**\n   * Indication whether the tab is in a pop out window\n   */\n  isMultiWindow?: boolean;\n\n  /**\n   * Personal app icon y coordinate position\n   */\n  appIconPosition?: number;\n\n  /**\n   * Source origin from where the tab is opened\n   */\n  sourceOrigin?: string;\n\n  /**\n   * Time when the user clicked on the tab\n   */\n  userClickTime?: number;\n\n  /**\n   * Team Template ID if there was a Team Template associated with the creation of the team.\n   */\n  teamTemplateId?: string;\n\n  /**\n   * Where the user prefers the file to be opened from by default during file open\n   */\n  userFileOpenPreference?: FileOpenPreference;\n\n  /**\n   * Teamsite ID, aka sharepoint site id.\n   */\n  teamSiteId?: string;\n\n  /**\n   * The SharePoint my site domain associated with the user.\n   */\n  mySiteDomain?: string;\n\n  /**\n   * The SharePoint relative path to the current users mysite\n   */\n  mySitePath?: string;\n}\n\nexport interface DeepLinkParameters {\n  /**\n   * The developer-defined unique ID for the sub-entity to which this deep link points in the current entity.\n   * This field should be used to restore to a specific state within an entity, such as scrolling to or activating a specific piece of content.\n   */\n  subEntityId: string;\n\n  /**\n   * The label for the sub-entity that should be displayed when the deep link is rendered in a client.\n   */\n  subEntityLabel: string;\n\n  /**\n   * The fallback URL to which to navigate the user if the client cannot render the page.\n   * This URL should lead directly to the sub-entity.\n   */\n  subEntityWebUrl?: string;\n}\n\nexport interface TaskInfo {\n  /**\n   * The url to be rendered in the webview/iframe.\n   */\n  url?: string;\n\n  /**\n   * JSON defining an adaptive card.\n   */\n  card?: string;\n\n  /**\n   * The requested height of the webview/iframe.\n   */\n  height?: TaskModuleDimension | number;\n\n  /**\n   * The requested width of the webview/iframe.\n   */\n  width?: TaskModuleDimension | number;\n\n  /**\n   * Title of the task module.\n   */\n  title?: string;\n\n  /**\n   * If client doesnt support the URL, the URL that needs to be opened in the browser.\n   */\n  fallbackUrl?: string;\n\n  /**\n   * Specifies a bot ID to send the result of the user's interaction with the task module.\n   * If specified, the bot will receive a task/complete invoke event with a JSON object\n   * in the event payload.\n   */\n  completionBotId?: string;\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n */\nexport interface OpenConversationRequest {\n  /**\n   * The Id of the subEntity where the conversation is taking place\n   */\n  subEntityId: string;\n\n  /**\n   * The title of the conversation\n   */\n  title: string;\n\n  /**\n   * The Id of the conversation. This is optional and should be specified whenever a previous conversation about a specific sub-entity has already been started before\n   */\n  conversationId?: string;\n\n  /**\n   * The Id of the channel. This is optional and should be specified whenever a conversation is started or opened in a personal app scope\n   */\n  channelId?: string;\n\n  /**\n   * The entity Id of the tab\n   */\n  entityId: string;\n\n  /**\n   * A function that is called once the conversation Id has been created\n   */\n  onStartConversation?: (conversationResponse: ConversationResponse) => void;\n\n  /**\n   * A function that is called if the pane is closed\n   */\n  onCloseConversation?: (conversationResponse: ConversationResponse) => void;\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n */\nexport interface ConversationResponse {\n  /**\n   * The Id of the subEntity where the conversation is taking place\n   */\n  subEntityId: string;\n\n  /**\n   * The Id of the conversation. This is optional and should be specified whenever a previous conversation about a specific sub-entity has already been started before\n   */\n  conversationId?: string;\n\n  /**\n   * The Id of the channel. This is optional and should be specified whenever a conversation is started or opened in a personal app scope\n   */\n  channelId?: string;\n\n  /**\n   * The entity Id of the tab\n   */\n  entityId?: string;\n}\n\n/**\n * @private\n * Hide from docs.\n */\nexport interface LoadContext {\n  /**\n   * The entity that is requested to be loaded\n   */\n  entityId: string;\n\n  /**\n   * The content URL that is requested to be loaded\n   */\n  contentUrl: string;\n}\n\nexport interface FrameContext {\n  /**\n   * The current URL that needs to be used in the iframe if the tab is reloaded\n   */\n  contentUrl: string;\n\n  /**\n   * The current URL that needs to be used for opening the website when the user clicks on 'Go to website'\n   */\n  websiteUrl: string;\n}\n\nexport interface SdkError {\n  /**\n  error code\n  */\n  errorCode: ErrorCode;\n  /**\n  Optional description for the error. This may contain useful information for web-app developers.\n  This string will not be localized and is not for end-user consumption. \n  App should not depend on the string content. The exact value may change. This is only for debugging purposes.\n  */\n  message?: string;\n}\n\nexport enum ErrorCode {\n  /**\n   * API not supported in the current platform.\n   */\n  NOT_SUPPORTED_ON_PLATFORM = 100,\n  /**\n   * Internal error encountered while performing the required operation.\n   */\n  INTERNAL_ERROR = 500,\n  /**\n   * API is not supported in the current context\n   */\n  NOT_SUPPORTED_IN_CURRENT_CONTEXT = 501,\n  /**\n  Permissions denied by user\n  */\n  PERMISSION_DENIED = 1000,\n  /**\n   * Network issue\n   */\n  NETWORK_ERROR = 2000,\n  /**\n   * Underlying hardware doesn't support the capability\n   */\n  NO_HW_SUPPORT = 3000,\n  /**\n   * One or more arguments are invalid\n   */\n  INVALID_ARGUMENTS = 4000,\n  /**\n   * User is not authorized for this operation\n   */\n  UNAUTHORIZED_USER_OPERATION = 5000,\n  /**\n   * Could not complete the operation due to insufficient resources\n   */\n  INSUFFICIENT_RESOURCES = 6000,\n  /**\n   * Platform throttled the request because of API was invoked too frequently\n   */\n  THROTTLE = 7000,\n  /**\n   * User aborted the operation\n   */\n  USER_ABORT = 8000,\n  /**\n   * Could not complete the operation in the given time interval\n   */\n  OPERATION_TIMED_OUT = 8001,\n  /**\n   * Platform code is old and doesn't implement this API\n   */\n  OLD_PLATFORM = 9000,\n  /**\n   * The file specified was not found on the given location\n   */\n  FILE_NOT_FOUND = 404,\n  /**\n   * The return value is too big and has exceeded our size boundries\n   */\n  SIZE_EXCEEDED = 10000,\n}\n","import { FrameContexts } from '../public';\nexport class GlobalVars {\n  public static initializeCalled = false;\n  public static initializeCompleted = false;\n  public static additionalValidOrigins: string[] = [];\n  public static additionalValidOriginsRegexp: RegExp = null;\n  public static initializeCallbacks: { (): void }[] = [];\n  public static isFramelessWindow = false;\n  public static frameContext: FrameContexts;\n  public static hostClientType: string;\n  public static clientSupportedSDKVersion: string;\n  public static printCapabilityEnabled = false;\n}\n","export { appInitialization } from './appInitialization';\nexport { authentication } from './authentication';\nexport { FrameContexts, HostClientType, TaskModuleDimension, TeamType, UserTeamRole, ChannelType } from './constants';\nexport {\n  Context,\n  DeepLinkParameters,\n  ErrorCode,\n  FrameContext,\n  LoadContext,\n  SdkError,\n  TabInformation,\n  TabInstance,\n  TabInstanceParameters,\n  TaskInfo,\n  TeamInformation,\n  FileOpenPreference,\n} from './interfaces';\nexport {\n  enablePrintCapability,\n  executeDeepLink,\n  getContext,\n  getMruTabInstances,\n  getTabInstances,\n  initialize,\n  initializeWithFrameContext,\n  print,\n  registerBackButtonHandler,\n  registerBeforeUnloadHandler,\n  registerFocusEnterHandler,\n  registerChangeSettingsHandler,\n  registerFullScreenHandler,\n  registerOnLoadHandler,\n  registerOnThemeChangeHandler,\n  registerAppButtonClickHandler,\n  registerAppButtonHoverEnterHandler,\n  registerAppButtonHoverLeaveHandler,\n  setFrameContext,\n  shareDeepLink,\n} from './publicAPIs';\nexport { returnFocus, navigateBack, navigateCrossDomain, navigateToTab } from './navigation';\nexport { settings } from './settings';\nexport { tasks } from './tasks';\nexport { ChildAppWindow, IAppWindow, ParentAppWindow } from './appWindow';\nexport { menus } from './menus';\nexport { media } from './media';\nexport { location } from './location';\nexport { meeting } from './meeting';\nexport { monetization } from './monetization';\nexport { people } from './people';\nexport { video } from './video';\nexport { sharing } from './sharing';\nexport { stageView } from './stageView';\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { GlobalVars } from '../internal/globalVars';\nimport { FrameContexts, HostClientType } from './constants';\nimport {\n  Communication,\n  sendMessageToParent,\n  sendMessageEventToChild,\n  waitForMessageQueue,\n} from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\n\n/**\n * Namespace to interact with the authentication-specific part of the SDK.\n * This object is used for starting or completing authentication flows.\n */\nexport namespace authentication {\n  let authParams: AuthenticateParameters;\n  let authWindowMonitor: number;\n\n  export function initialize(): void {\n    registerHandler('authentication.authenticate.success', handleSuccess, false);\n    registerHandler('authentication.authenticate.failure', handleFailure, false);\n  }\n\n  /**\n   * Registers the authentication Communication.handlers\n   * @param authenticateParameters A set of values that configure the authentication pop-up.\n   */\n  export function registerAuthenticationHandlers(authenticateParameters: AuthenticateParameters): void {\n    authParams = authenticateParameters;\n  }\n\n  /**\n   * Initiates an authentication request, which opens a new window with the specified settings.\n   */\n  export function authenticate(authenticateParameters?: AuthenticateParameters): void {\n    const authenticateParams = authenticateParameters !== undefined ? authenticateParameters : authParams;\n    ensureInitialized(\n      FrameContexts.content,\n      FrameContexts.sidePanel,\n      FrameContexts.settings,\n      FrameContexts.remove,\n      FrameContexts.task,\n      FrameContexts.stage,\n      FrameContexts.meetingStage,\n    );\n    if (\n      GlobalVars.hostClientType === HostClientType.desktop ||\n      GlobalVars.hostClientType === HostClientType.android ||\n      GlobalVars.hostClientType === HostClientType.ios ||\n      GlobalVars.hostClientType === HostClientType.rigel ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsWindows ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsAndroid ||\n      GlobalVars.hostClientType === HostClientType.teamsPhones ||\n      GlobalVars.hostClientType === HostClientType.teamsDisplays\n    ) {\n      // Convert any relative URLs into absolute URLs before sending them over to the parent window.\n      const link = document.createElement('a');\n      link.href = authenticateParams.url;\n      // Ask the parent window to open an authentication window with the parameters provided by the caller.\n      sendMessageToParent(\n        'authentication.authenticate',\n        [link.href, authenticateParams.width, authenticateParams.height, authenticateParams.isExternal],\n        (success: boolean, response: string) => {\n          if (success) {\n            authenticateParams.successCallback(response);\n          } else {\n            authenticateParams.failureCallback(response);\n          }\n        },\n      );\n    } else {\n      // Open an authentication window with the parameters provided by the caller.\n      openAuthenticationWindow(authenticateParams);\n    }\n  }\n\n  /**\n   * Requests an Azure AD token to be issued on behalf of the app. The token is acquired from the cache\n   * if it is not expired. Otherwise a request is sent to Azure AD to obtain a new token.\n   * @param authTokenRequest A set of values that configure the token request.\n   */\n  export function getAuthToken(authTokenRequest: AuthTokenRequest): void {\n    ensureInitialized();\n    sendMessageToParent(\n      'authentication.getAuthToken',\n      [authTokenRequest.resources, authTokenRequest.claims, authTokenRequest.silent],\n      (success: boolean, result: string) => {\n        if (success) {\n          authTokenRequest.successCallback(result);\n        } else {\n          authTokenRequest.failureCallback(result);\n        }\n      },\n    );\n  }\n\n  /**\n   * @private\n   * Hide from docs.\n   * ------\n   * Requests the decoded Azure AD user identity on behalf of the app.\n   */\n  export function getUser(userRequest: UserRequest): void {\n    ensureInitialized();\n    sendMessageToParent('authentication.getUser', (success: boolean, result: UserProfile | string) => {\n      if (success) {\n        userRequest.successCallback(result as UserProfile);\n      } else {\n        userRequest.failureCallback(result as string);\n      }\n    });\n  }\n\n  function closeAuthenticationWindow(): void {\n    // Stop monitoring the authentication window\n    stopAuthenticationWindowMonitor();\n    // Try to close the authentication window and clear all properties associated with it\n    try {\n      if (Communication.childWindow) {\n        Communication.childWindow.close();\n      }\n    } finally {\n      Communication.childWindow = null;\n      Communication.childOrigin = null;\n    }\n  }\n\n  function openAuthenticationWindow(authenticateParameters: AuthenticateParameters): void {\n    authParams = authenticateParameters;\n    // Close the previously opened window if we have one\n    closeAuthenticationWindow();\n    // Start with a sensible default size\n    let width = authParams.width || 600;\n    let height = authParams.height || 400;\n    // Ensure that the new window is always smaller than our app's window so that it never fully covers up our app\n    width = Math.min(width, Communication.currentWindow.outerWidth - 400);\n    height = Math.min(height, Communication.currentWindow.outerHeight - 200);\n    // Convert any relative URLs into absolute URLs before sending them over to the parent window\n    const link = document.createElement('a');\n    link.href = authParams.url.replace('{oauthRedirectMethod}', 'web');\n    // We are running in the browser, so we need to center the new window ourselves\n    let left: number =\n      typeof Communication.currentWindow.screenLeft !== 'undefined'\n        ? Communication.currentWindow.screenLeft\n        : Communication.currentWindow.screenX;\n    let top: number =\n      typeof Communication.currentWindow.screenTop !== 'undefined'\n        ? Communication.currentWindow.screenTop\n        : Communication.currentWindow.screenY;\n    left += Communication.currentWindow.outerWidth / 2 - width / 2;\n    top += Communication.currentWindow.outerHeight / 2 - height / 2;\n    // Open a child window with a desired set of standard browser features\n    Communication.childWindow = Communication.currentWindow.open(\n      link.href,\n      '_blank',\n      'toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=' +\n        top +\n        ', left=' +\n        left +\n        ', width=' +\n        width +\n        ', height=' +\n        height,\n    );\n    if (Communication.childWindow) {\n      // Start monitoring the authentication window so that we can detect if it gets closed before the flow completes\n      startAuthenticationWindowMonitor();\n    } else {\n      // If we failed to open the window, fail the authentication flow\n      handleFailure('FailedToOpenWindow');\n    }\n  }\n\n  function stopAuthenticationWindowMonitor(): void {\n    if (authWindowMonitor) {\n      clearInterval(authWindowMonitor);\n      authWindowMonitor = 0;\n    }\n    removeHandler('initialize');\n    removeHandler('navigateCrossDomain');\n  }\n\n  function startAuthenticationWindowMonitor(): void {\n    // Stop the previous window monitor if one is running\n    stopAuthenticationWindowMonitor();\n    // Create an interval loop that\n    // - Notifies the caller of failure if it detects that the authentication window is closed\n    // - Keeps pinging the authentication window while it is open to re-establish\n    //   contact with any pages along the authentication flow that need to communicate\n    //   with us\n    authWindowMonitor = Communication.currentWindow.setInterval(() => {\n      if (!Communication.childWindow || Communication.childWindow.closed) {\n        handleFailure('CancelledByUser');\n      } else {\n        const savedChildOrigin = Communication.childOrigin;\n        try {\n          Communication.childOrigin = '*';\n          sendMessageEventToChild('ping');\n        } finally {\n          Communication.childOrigin = savedChildOrigin;\n        }\n      }\n    }, 100);\n    // Set up an initialize-message handler that gives the authentication window its frame context\n    registerHandler('initialize', () => {\n      return [FrameContexts.authentication, GlobalVars.hostClientType];\n    });\n    // Set up a navigateCrossDomain message handler that blocks cross-domain re-navigation attempts\n    // in the authentication window. We could at some point choose to implement this method via a call to\n    // authenticationWindow.location.href = url; however, we would first need to figure out how to\n    // validate the URL against the tab's list of valid domains.\n    registerHandler('navigateCrossDomain', () => {\n      return false;\n    });\n  }\n\n  /**\n   * Notifies the frame that initiated this authentication request that the request was successful.\n   * This function is usable only on the authentication window.\n   * This call causes the authentication window to be closed.\n   * @param result Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives this value in its callback.\n   * @param callbackUrl Specifies the url to redirect back to if the client is Win32 Outlook.\n   */\n  export function notifySuccess(result?: string, callbackUrl?: string): void {\n    redirectIfWin32Outlook(callbackUrl, 'result', result);\n    ensureInitialized(FrameContexts.authentication);\n    sendMessageToParent('authentication.authenticate.success', [result]);\n    // Wait for the message to be sent before closing the window\n    waitForMessageQueue(Communication.parentWindow, () => setTimeout(() => Communication.currentWindow.close(), 200));\n  }\n\n  /**\n   * Notifies the frame that initiated this authentication request that the request failed.\n   * This function is usable only on the authentication window.\n   * This call causes the authentication window to be closed.\n   * @param result Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives this value in its callback.\n   * @param callbackUrl Specifies the url to redirect back to if the client is Win32 Outlook.\n   */\n  export function notifyFailure(reason?: string, callbackUrl?: string): void {\n    redirectIfWin32Outlook(callbackUrl, 'reason', reason);\n    ensureInitialized(FrameContexts.authentication);\n    sendMessageToParent('authentication.authenticate.failure', [reason]);\n    // Wait for the message to be sent before closing the window\n    waitForMessageQueue(Communication.parentWindow, () => setTimeout(() => Communication.currentWindow.close(), 200));\n  }\n\n  function handleSuccess(result?: string): void {\n    try {\n      if (authParams && authParams.successCallback) {\n        authParams.successCallback(result);\n      }\n    } finally {\n      authParams = null;\n      closeAuthenticationWindow();\n    }\n  }\n\n  function handleFailure(reason?: string): void {\n    try {\n      if (authParams && authParams.failureCallback) {\n        authParams.failureCallback(reason);\n      }\n    } finally {\n      authParams = null;\n      closeAuthenticationWindow();\n    }\n  }\n\n  /**\n   * Validates that the callbackUrl param is a valid connector url, appends the result/reason and authSuccess/authFailure as URL fragments and redirects the window\n   * @param callbackUrl - the connectors url to redirect to\n   * @param key - \"result\" in case of success and \"reason\" in case of failure\n   * @param value - the value of the passed result/reason parameter\n   */\n  function redirectIfWin32Outlook(callbackUrl?: string, key?: string, value?: string): void {\n    if (callbackUrl) {\n      const link = document.createElement('a');\n      link.href = decodeURIComponent(callbackUrl);\n      if (\n        link.host &&\n        link.host !== window.location.host &&\n        link.host === 'outlook.office.com' &&\n        link.search.indexOf('client_type=Win32_Outlook') > -1\n      ) {\n        if (key && key === 'result') {\n          if (value) {\n            link.href = updateUrlParameter(link.href, 'result', value);\n          }\n          Communication.currentWindow.location.assign(updateUrlParameter(link.href, 'authSuccess', ''));\n        }\n        if (key && key === 'reason') {\n          if (value) {\n            link.href = updateUrlParameter(link.href, 'reason', value);\n          }\n          Communication.currentWindow.location.assign(updateUrlParameter(link.href, 'authFailure', ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Appends either result or reason as a fragment to the 'callbackUrl'\n   * @param uri - the url to modify\n   * @param key - the fragment key\n   * @param value - the fragment value\n   */\n  function updateUrlParameter(uri: string, key: string, value: string): string {\n    const i = uri.indexOf('#');\n    let hash = i === -1 ? '#' : uri.substr(i);\n    hash = hash + '&' + key + (value !== '' ? '=' + value : '');\n    uri = i === -1 ? uri : uri.substr(0, i);\n    return uri + hash;\n  }\n\n  export interface AuthenticateParameters {\n    /**\n     * The URL for the authentication pop-up.\n     */\n    url: string;\n    /**\n     * The preferred width for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    width?: number;\n    /**\n     * The preferred height for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    height?: number;\n    /**\n     * The flag which indicates whether the auth page should be opened in an external browser. This flag has no effect on the web client.\n     */\n    isExternal?: boolean;\n    /**\n     * A function that is called if the authentication succeeds, with the result returned from the authentication pop-up.\n     */\n    successCallback?: (result?: string) => void;\n    /**\n     * A function that is called if the authentication fails, with the reason for the failure returned from the authentication pop-up.\n     */\n    failureCallback?: (reason?: string) => void;\n  }\n\n  export interface AuthTokenRequest {\n    /**\n     * An optional list of resource for which to acquire the access token; only used for full trust apps.\n     */\n    resources?: string[];\n    /**\n     * An optional list of claims which to pass to AAD when requesting the access token.\n     */\n    claims?: string[];\n    /**\n     * An optional flag indicating whether to attempt the token acquisition silently or allow a prompt to be shown.\n     */\n    silent?: boolean;\n    /**\n     * A function that is called if the token request succeeds, with the resulting token.\n     */\n    successCallback?: (token: string) => void;\n    /**\n     * A function that is called if the token request fails, with the reason for the failure.\n     */\n    failureCallback?: (reason: string) => void;\n  }\n\n  /**\n   * @private\n   * Hide from docs.\n   * ------\n   */\n  export interface UserRequest {\n    /**\n     * A function that is called if the token request succeeds, with the resulting token.\n     */\n    successCallback?: (user: UserProfile) => void;\n    /**\n     * A function that is called if the token request fails, with the reason for the failure.\n     */\n    failureCallback?: (reason: string) => void;\n  }\n\n  /**\n   * @private\n   * Hide from docs.\n   * ------\n   */\n  export interface UserProfile {\n    /**\n     * The intended recipient of the token. The application that receives the token must verify that the audience\n     * value is correct and reject any tokens intended for a different audience.\n     */\n    aud: string;\n    /**\n     * Identifies how the subject of the token was authenticated.\n     */\n    amr: string[];\n    /**\n     * Stores the time at which the token was issued. It is often used to measure token freshness.\n     */\n    iat: number;\n    /**\n     * Identifies the security token service (STS) that constructs and returns the token. In the tokens that Azure AD\n     * returns, the issuer is sts.windows.net. The GUID in the issuer claim value is the tenant ID of the Azure AD\n     * directory. The tenant ID is an immutable and reliable identifier of the directory.\n     */\n    iss: string;\n    /**\n     * Provides the last name, surname, or family name of the user as defined in the Azure AD user object.\n     */\n    family_name: string;\n    /**\n     * Provides the first or \"given\" name of the user, as set on the Azure AD user object.\n     */\n    given_name: string;\n    /**\n     * Provides a human-readable value that identifies the subject of the token. This value is not guaranteed to\n     * be unique within a tenant and is designed to be used only for display purposes.\n     */\n    unique_name: string;\n    /**\n     * Contains a unique identifier of an object in Azure AD. This value is immutable and cannot be reassigned or\n     * reused. Use the object ID to identify an object in queries to Azure AD.\n     */\n    oid: string;\n    /**\n     * Identifies the principal about which the token asserts information, such as the user of an application.\n     * This value is immutable and cannot be reassigned or reused, so it can be used to perform authorization\n     * checks safely. Because the subject is always present in the tokens the Azure AD issues, we recommended\n     * using this value in a general-purpose authorization system.\n     */\n    sub: string;\n    /**\n     * An immutable, non-reusable identifier that identifies the directory tenant that issued the token. You can\n     * use this value to access tenant-specific directory resources in a multitenant application. For example,\n     * you can use this value to identify the tenant in a call to the Graph API.\n     */\n    tid: string;\n    /**\n     * Defines the time interval within which a token is valid. The service that validates the token should verify\n     * that the current date is within the token lifetime; otherwise it should reject the token. The service might\n     * allow for up to five minutes beyond the token lifetime to account for any differences in clock time (\"time\n     * skew\") between Azure AD and the service.\n     */\n    exp: number;\n    nbf: number;\n    /**\n     * Stores the user name of the user principal.\n     */\n    upn: string;\n    /**\n     * Stores the version number of the token.\n     */\n    ver: string;\n  }\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { FrameContexts } from './constants';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\n\n/**\n * Namespace to interact with the settings-specific part of the SDK.\n * This object is usable only on the settings frame.\n */\nexport namespace settings {\n  let saveHandler: (evt: SaveEvent) => void;\n  let removeHandler: (evt: RemoveEvent) => void;\n\n  export function initialize(): void {\n    registerHandler('settings.save', handleSave, false);\n    registerHandler('settings.remove', handleRemove, false);\n  }\n\n  /**\n   * Sets the validity state for the settings.\n   * The initial value is false, so the user cannot save the settings until this is called with true.\n   * @param validityState Indicates whether the save or remove button is enabled for the user.\n   */\n  export function setValidityState(validityState: boolean): void {\n    ensureInitialized(FrameContexts.settings, FrameContexts.remove);\n    sendMessageToParent('settings.setValidityState', [validityState]);\n  }\n\n  /**\n   * Gets the settings for the current instance.\n   * @param callback The callback to invoke when the {@link Settings} object is retrieved.\n   */\n  export function getSettings(callback: (instanceSettings: Settings) => void): void {\n    ensureInitialized(FrameContexts.content, FrameContexts.settings, FrameContexts.remove, FrameContexts.sidePanel);\n    sendMessageToParent('settings.getSettings', callback);\n  }\n\n  /**\n   * Sets the settings for the current instance.\n   * This is an asynchronous operation; calls to getSettings are not guaranteed to reflect the changed state.\n   * @param settings The desired settings for this instance.\n   */\n  export function setSettings(\n    instanceSettings: Settings,\n    onComplete?: (status: boolean, reason?: string) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content, FrameContexts.settings, FrameContexts.sidePanel);\n    sendMessageToParent(\n      'settings.setSettings',\n      [instanceSettings],\n      onComplete ? onComplete : getGenericOnCompleteHandler(),\n    );\n  }\n\n  /**\n   * Registers a handler for when the user attempts to save the settings. This handler should be used\n   * to create or update the underlying resource powering the content.\n   * The object passed to the handler must be used to notify whether to proceed with the save.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the user selects the save button.\n   */\n  export function registerOnSaveHandler(handler: (evt: SaveEvent) => void): void {\n    ensureInitialized(FrameContexts.settings);\n    saveHandler = handler;\n    handler && sendMessageToParent('registerHandler', ['save']);\n  }\n\n  /**\n   * Registers a handler for user attempts to remove content. This handler should be used\n   * to remove the underlying resource powering the content.\n   * The object passed to the handler must be used to indicate whether to proceed with the removal.\n   * Only one handler may be registered at a time. Subsequent registrations will override the first.\n   * @param handler The handler to invoke when the user selects the remove button.\n   */\n  export function registerOnRemoveHandler(handler: (evt: RemoveEvent) => void): void {\n    ensureInitialized(FrameContexts.remove, FrameContexts.settings);\n    removeHandler = handler;\n    handler && sendMessageToParent('registerHandler', ['remove']);\n  }\n\n  function handleSave(result?: SaveParameters): void {\n    const saveEvent = new SaveEventImpl(result);\n    if (saveHandler) {\n      saveHandler(saveEvent);\n    } else {\n      // If no handler is registered, we assume success.\n      saveEvent.notifySuccess();\n    }\n  }\n\n  export interface Settings {\n    /**\n     * A suggested display name for the new content.\n     * In the settings for an existing instance being updated, this call has no effect.\n     */\n    suggestedDisplayName?: string;\n    /**\n     * Sets the URL to use for the content of this instance.\n     */\n    contentUrl: string;\n    /**\n     * Sets the URL for the removal configuration experience.\n     */\n    removeUrl?: string;\n    /**\n     * Sets the URL to use for the external link to view the underlying resource in a browser.\n     */\n    websiteUrl?: string;\n    /**\n     * The developer-defined unique ID for the entity to which this content points.\n     */\n    entityId?: string;\n  }\n\n  export interface SaveEvent {\n    /**\n     * Object containing properties passed as arguments to the settings.save event.\n     */\n    result: SaveParameters;\n    /**\n     * Indicates that the underlying resource has been created and the settings can be saved.\n     */\n    notifySuccess(): void;\n    /**\n     * Indicates that creation of the underlying resource failed and that the settings cannot be saved.\n     * @param reason Specifies a reason for the failure. If provided, this string is displayed to the user; otherwise a generic error is displayed.\n     */\n    notifyFailure(reason?: string): void;\n  }\n\n  export interface RemoveEvent {\n    /**\n     * Indicates that the underlying resource has been removed and the content can be removed.\n     */\n    notifySuccess(): void;\n    /**\n     * Indicates that removal of the underlying resource failed and that the content cannot be removed.\n     * @param reason Specifies a reason for the failure. If provided, this string is displayed to the user; otherwise a generic error is displayed.\n     */\n    notifyFailure(reason?: string): void;\n  }\n\n  export interface SaveParameters {\n    /**\n     * Connector's webhook Url returned as arguments to settings.save event as part of user clicking on Save\n     */\n    webhookUrl?: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs, since this class is not directly used.\n   */\n  class SaveEventImpl implements SaveEvent {\n    public notified = false;\n    public result: SaveParameters;\n    public constructor(result?: SaveParameters) {\n      this.result = result ? result : {};\n    }\n    public notifySuccess(): void {\n      this.ensureNotNotified();\n      sendMessageToParent('settings.save.success');\n      this.notified = true;\n    }\n    public notifyFailure(reason?: string): void {\n      this.ensureNotNotified();\n      sendMessageToParent('settings.save.failure', [reason]);\n      this.notified = true;\n    }\n    private ensureNotNotified(): void {\n      if (this.notified) {\n        throw new Error('The SaveEvent may only notify success or failure once.');\n      }\n    }\n  }\n\n  function handleRemove(): void {\n    const removeEvent = new RemoveEventImpl();\n    if (removeHandler) {\n      removeHandler(removeEvent);\n    } else {\n      // If no handler is registered, we assume success.\n      removeEvent.notifySuccess();\n    }\n  }\n\n  /**\n   * @private\n   * Hide from docs, since this class is not directly used.\n   */\n  class RemoveEventImpl implements RemoveEvent {\n    public notified = false;\n\n    public notifySuccess(): void {\n      this.ensureNotNotified();\n      sendMessageToParent('settings.remove.success');\n      this.notified = true;\n    }\n\n    public notifyFailure(reason?: string): void {\n      this.ensureNotNotified();\n      sendMessageToParent('settings.remove.failure', [reason]);\n      this.notified = true;\n    }\n\n    private ensureNotNotified(): void {\n      if (this.notified) {\n        throw new Error('The removeEvent may only notify success or failure once.');\n      }\n    }\n  }\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\n\n/**\n * Namespace to interact with the logging part of the SDK.\n * This object is used to send the app logs on demand to the host client\n *\n * @private\n * Hide from docs\n */\nexport namespace logs {\n  /**\n   * @private\n   * Hide from docs\n   * ------\n   * Registers a handler for getting app log\n   * @param handler The handler to invoke to get the app log\n   */\n  export function registerGetLogHandler(handler: () => string): void {\n    ensureInitialized();\n\n    if (handler) {\n      registerHandler('log.request', () => {\n        const log: string = handler();\n        sendMessageToParent('log.receive', [log]);\n      });\n    } else {\n      removeHandler('log.request');\n    }\n  }\n}\n","import { ensureInitialized, isAPISupportedByPlatform } from '../internal/internalAPIs';\nimport { FrameContexts, HostClientType } from '../public/constants';\nimport {\n  ChatMembersInformation,\n  ShowNotificationParameters,\n  FilePreviewParameters,\n  TeamInstanceParameters,\n  UserJoinedTeamsInformation,\n  UserSettingTypes,\n} from './interfaces';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { Communication, sendMessageToParent, sendMessageEventToChild } from '../internal/communication';\n\nimport { registerHandler } from '../internal/handlers';\nimport { GlobalVars } from '../internal/globalVars';\nimport { ErrorCode, SdkError } from '../public/interfaces';\nimport { getUserJoinedTeamsSupportedAndroidClientVersion } from '../internal/constants';\n\nexport function initializePrivateApis(): void {\n  //Keeping this API for any future usage, wherein privateAPIs need to be initialized\n}\n\n/**\n * @private\n * Hide from docs\n * ------\n * Allows an app to retrieve information of all user joined teams\n * @param callback The callback to invoke when the {@link TeamInstanceParameters} object is retrieved.\n * @param teamInstanceParameters OPTIONAL Flags that specify whether to scope call to favorite teams\n */\nexport function getUserJoinedTeams(\n  callback: (userJoinedTeamsInformation: UserJoinedTeamsInformation) => void,\n  teamInstanceParameters?: TeamInstanceParameters,\n): void {\n  ensureInitialized();\n\n  if (\n    (GlobalVars.hostClientType === HostClientType.android ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsAndroid ||\n      GlobalVars.hostClientType === HostClientType.teamsPhones ||\n      GlobalVars.hostClientType === HostClientType.teamsDisplays) &&\n    !isAPISupportedByPlatform(getUserJoinedTeamsSupportedAndroidClientVersion)\n  ) {\n    const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n    throw new Error(JSON.stringify(oldPlatformError));\n  }\n\n  sendMessageToParent('getUserJoinedTeams', [teamInstanceParameters], callback);\n}\n\n/**\n * @private\n * Hide from docs\n * ------\n * Place the tab into full-screen mode.\n */\nexport function enterFullscreen(): void {\n  ensureInitialized(FrameContexts.content);\n  sendMessageToParent('enterFullscreen', []);\n}\n\n/**\n * @private\n * Hide from docs\n * ------\n * Reverts the tab into normal-screen mode.\n */\nexport function exitFullscreen(): void {\n  ensureInitialized(FrameContexts.content);\n  sendMessageToParent('exitFullscreen', []);\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n * Opens a client-friendly preview of the specified file.\n * @param file The file to preview.\n */\nexport function openFilePreview(filePreviewParameters: FilePreviewParameters): void {\n  ensureInitialized(FrameContexts.content, FrameContexts.task);\n\n  const params = [\n    filePreviewParameters.entityId,\n    filePreviewParameters.title,\n    filePreviewParameters.description,\n    filePreviewParameters.type,\n    filePreviewParameters.objectUrl,\n    filePreviewParameters.downloadUrl,\n    filePreviewParameters.webPreviewUrl,\n    filePreviewParameters.webEditUrl,\n    filePreviewParameters.baseUrl,\n    filePreviewParameters.editFile,\n    filePreviewParameters.subEntityId,\n    filePreviewParameters.viewerAction,\n    filePreviewParameters.fileOpenPreference,\n    filePreviewParameters.conversationId,\n  ];\n\n  sendMessageToParent('openFilePreview', params);\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n * display notification API.\n * @param message Notification message.\n * @param notificationType Notification type\n */\nexport function showNotification(showNotificationParameters: ShowNotificationParameters): void {\n  ensureInitialized(FrameContexts.content);\n  const params = [showNotificationParameters.message, showNotificationParameters.notificationType];\n  sendMessageToParent('showNotification', params);\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n * Upload a custom App manifest directly to both team and personal scopes.\n * This method works just for the first party Apps.\n */\nexport function uploadCustomApp(manifestBlob: Blob, onComplete?: (status: boolean, reason?: string) => void): void {\n  ensureInitialized();\n\n  sendMessageToParent('uploadCustomApp', [manifestBlob], onComplete ? onComplete : getGenericOnCompleteHandler());\n}\n\n/**\n * @private\n * Internal use only\n * Sends a custom action MessageRequest to Teams or parent window\n * @param actionName Specifies name of the custom action to be sent\n * @param args Specifies additional arguments passed to the action\n * @param callback Optionally specify a callback to receive response parameters from the parent\n * @returns id of sent message\n */\nexport function sendCustomMessage(\n  actionName: string,\n  // tslint:disable-next-line:no-any\n  args?: any[],\n  // tslint:disable-next-line:no-any\n  callback?: (...args: any[]) => void,\n): void {\n  ensureInitialized();\n\n  sendMessageToParent(actionName, args, callback);\n}\n\n/**\n * @private\n * Internal use only\n * Sends a custom action MessageEvent to a child iframe/window, only if you are not using auth popup.\n * Otherwise it will go to the auth popup (which becomes the child)\n * @param actionName Specifies name of the custom action to be sent\n * @param args Specifies additional arguments passed to the action\n * @returns id of sent message\n */\nexport function sendCustomEvent(\n  actionName: string,\n  // tslint:disable-next-line:no-any\n  args?: any[],\n): void {\n  ensureInitialized();\n\n  //validate childWindow\n  if (!Communication.childWindow) {\n    throw new Error('The child window has not yet been initialized or is not present');\n  }\n  sendMessageEventToChild(actionName, args);\n}\n\n/**\n * @private\n * Internal use only\n * Adds a handler for an action sent by a child window or parent window\n * @param actionName Specifies name of the action message to handle\n * @param customHandler The callback to invoke when the action message is received. The return value is sent to the child\n */\nexport function registerCustomHandler(\n  actionName: string,\n  customHandler: (\n    // tslint:disable-next-line:no-any\n    ...args: any[]\n  ) => any[],\n): void {\n  ensureInitialized();\n  registerHandler(actionName, (...args: any[]) => {\n    return customHandler.apply(this, args);\n  });\n}\n\n/**\n * @private\n * Hide from docs\n * ------\n * Allows an app to retrieve information of all chat members\n * Because a malicious party run your content in a browser, this value should\n * be used only as a hint as to who the members are and never as proof of membership.\n * @param callback The callback to invoke when the {@link ChatMembersInformation} object is retrieved.\n */\nexport function getChatMembers(callback: (chatMembersInformation: ChatMembersInformation) => void): void {\n  ensureInitialized();\n\n  sendMessageToParent('getChatMembers', callback);\n}\n\n/**\n * @private\n * Hide from docs\n * ------\n * Allows an app to get the configuration setting value\n * @param callback The callback to invoke when the value is retrieved.\n * @param key The key for the config setting\n */\nexport function getConfigSetting(callback: (value: string) => void, key: string): void {\n  ensureInitialized();\n\n  sendMessageToParent('getConfigSetting', [key], callback);\n}\n\n/**\n * @private\n * register a handler to be called when a user setting changes. The changed setting type & value is provided in the callback.\n * @param settingTypes List of user setting changes to subscribe\n * @param handler When a subscribed setting is updated this handler is called\n */\nexport function registerUserSettingsChangeHandler(\n  settingTypes: UserSettingTypes[],\n  handler: (settingType: UserSettingTypes, value: any) => void,\n): void {\n  ensureInitialized();\n\n  registerHandler('userSettingsChange', handler, true, [settingTypes]);\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\n/**\n * Namespace to interact with the menu-specific part of the SDK.\n * This object is used to show View Configuration, Action Menu and Navigation Bar Menu.\n *\n */\nexport namespace menus {\n  /**\n   * Represents information about item in View Configuration.\n   */\n  export interface ViewConfiguration {\n    /**\n     * Unique identifier of view.\n     */\n    id: string;\n    /**\n     * Display title of the view.\n     */\n    title: string;\n    /**\n     * Additional information for accessibility.\n     */\n    contentDescription?: string;\n  }\n\n  /**\n   * Defines how a menu item should appear in the NavBar.\n   */\n  export enum DisplayMode {\n    /**\n     * Only place this item in the NavBar if there's room for it.\n     * If there's no room, item is shown in the overflow menu.\n     */\n    ifRoom = 0,\n    /**\n     * Never place this item in the NavBar.\n     * The item would always be shown in NavBar's overflow menu.\n     */\n    overflowOnly = 1,\n  }\n\n  /**\n   * Represents information about menu item for Action Menu and Navigation Bar Menu.\n   */\n  export class MenuItem {\n    /**\n     * Unique identifier for the menu item.\n     */\n    public id: string;\n    /**\n     * Display title of the menu item.\n     */\n    public title: string;\n    /**\n     * Display icon of the menu item. The icon value must be a string having SVG icon content.\n     */\n    public icon: string;\n    /**\n     * Selected state display icon of the menu item. The icon value must be a string having SVG icon content.\n     */\n    public iconSelected?: string;\n    /**\n     * Additional information for accessibility.\n     */\n    public contentDescription?: string;\n    /**\n     * State of the menu item\n     */\n    public enabled = true;\n    /**\n     * Interface to show list of items on selection of menu item.\n     */\n    public viewData: ViewData;\n    /**\n     * Whether the menu item is selected or not\n     */\n    public selected = false;\n    /**\n     * The Display Mode of the menu item.\n     * Default Behaviour would be DisplayMode.ifRoom if null.\n     * Refer {@link DisplayMode}\n     */\n    public displayMode?: DisplayMode;\n  }\n  /**\n   * Represents information about view to show on Navigation Bar Menu item selection\n   */\n  export interface ViewData {\n    /**\n     * Display header title of the item list.\n     */\n    listTitle?: string;\n    /**\n     * Type of the menu item.\n     */\n    listType: MenuListType;\n    /**\n     * Array of MenuItem. Icon value will be required for all items in the list.\n     */\n    listItems: MenuItem[];\n  }\n  /**\n   * Represents information about type of list to display in Navigation Bar Menu.\n   */\n  export enum MenuListType {\n    dropDown = 'dropDown',\n    popOver = 'popOver',\n  }\n  let navBarMenuItemPressHandler: (id: string) => boolean;\n  let actionMenuItemPressHandler: (id: string) => boolean;\n  let viewConfigItemPressHandler: (id: string) => boolean;\n\n  export function initialize(): void {\n    registerHandler('navBarMenuItemPress', handleNavBarMenuItemPress, false);\n    registerHandler('actionMenuItemPress', handleActionMenuItemPress, false);\n    registerHandler('setModuleView', handleViewConfigItemPress, false);\n  }\n  /**\n   * Registers list of view configurations and it's handler.\n   * Handler is responsible for listening selection of View Configuration.\n   * @param viewConfig List of view configurations. Minimum 1 value is required.\n   * @param handler The handler to invoke when the user selects view configuration.\n   */\n  export function setUpViews(viewConfig: ViewConfiguration[], handler: (id: string) => boolean): void {\n    ensureInitialized();\n    viewConfigItemPressHandler = handler;\n    sendMessageToParent('setUpViews', [viewConfig]);\n  }\n  function handleViewConfigItemPress(id: string): void {\n    if (!viewConfigItemPressHandler || !viewConfigItemPressHandler(id)) {\n      ensureInitialized();\n      sendMessageToParent('viewConfigItemPress', [id]);\n    }\n  }\n  /**\n   * Used to set menu items on the Navigation Bar. If icon is available, icon will be shown, otherwise title will be shown.\n   * @param items List of MenuItems for Navigation Bar Menu.\n   * @param handler The handler to invoke when the user selects menu item.\n   */\n  export function setNavBarMenu(items: MenuItem[], handler: (id: string) => boolean): void {\n    ensureInitialized();\n    navBarMenuItemPressHandler = handler;\n    sendMessageToParent('setNavBarMenu', [items]);\n  }\n  function handleNavBarMenuItemPress(id: string): void {\n    if (!navBarMenuItemPressHandler || !navBarMenuItemPressHandler(id)) {\n      ensureInitialized();\n      sendMessageToParent('handleNavBarMenuItemPress', [id]);\n    }\n  }\n  export interface ActionMenuParameters {\n    /**\n     * Display title for Action Menu\n     */\n    title: string;\n    /**\n     * List of MenuItems for Action Menu\n     */\n    items: MenuItem[];\n  }\n  /**\n   * Used to show Action Menu.\n   * @param params Parameters for Menu Parameters\n   * @param handler The handler to invoke when the user selects menu item.\n   */\n  export function showActionMenu(params: ActionMenuParameters, handler: (id: string) => boolean): void {\n    ensureInitialized();\n    actionMenuItemPressHandler = handler;\n    sendMessageToParent('showActionMenu', [params]);\n  }\n  function handleActionMenuItemPress(id: string): void {\n    if (!actionMenuItemPressHandler || !actionMenuItemPressHandler(id)) {\n      ensureInitialized();\n      sendMessageToParent('handleActionMenuItemPress', [id]);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { FrameContexts } from './constants';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\n\nexport interface IAppWindow {\n  postMessage(message): void;\n  addEventListener(type: string, listener: Function): void;\n}\n\nexport class ChildAppWindow implements IAppWindow {\n  public postMessage(message: any, onComplete?: (status: boolean, reason?: string) => void): void {\n    ensureInitialized();\n    sendMessageToParent('messageForChild', [message], onComplete ? onComplete : getGenericOnCompleteHandler());\n  }\n\n  public addEventListener(type: string, listener: (message: any) => void): void {\n    if (type === 'message') {\n      registerHandler('messageForParent', listener);\n    }\n  }\n}\n\nexport class ParentAppWindow implements IAppWindow {\n  private static _instance: ParentAppWindow;\n  public static get Instance(): IAppWindow {\n    // Do you need arguments? Make it a regular method instead.\n    return this._instance || (this._instance = new this());\n  }\n\n  public postMessage(message: any, onComplete?: (status: boolean, reason?: string) => void): void {\n    ensureInitialized(FrameContexts.task);\n    sendMessageToParent('messageForParent', [message], onComplete ? onComplete : getGenericOnCompleteHandler());\n  }\n\n  public addEventListener(type: string, listener: (message: any) => void): void {\n    if (type === 'message') {\n      registerHandler('messageForChild', listener);\n    }\n  }\n}\n","import { GlobalVars } from '../internal/globalVars';\nimport { SdkError, ErrorCode } from './interfaces';\nimport { ensureInitialized, isAPISupportedByPlatform, isApiSupportedOnMobile } from '../internal/internalAPIs';\nimport { FrameContexts, HostClientType } from './constants';\nimport { generateGUID } from '../internal/utils';\nimport {\n  createFile,\n  decodeAttachment,\n  validateSelectMediaInputs,\n  validateGetMediaInputs,\n  validateViewImagesInput,\n  validateScanBarCodeInput,\n  isMediaCallSupportedOnMobile,\n  isVideoControllerRegistered,\n} from '../internal/mediaUtil';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport {\n  captureImageMobileSupportVersion,\n  mediaAPISupportVersion,\n  getMediaCallbackSupportVersion,\n  scanBarCodeAPIMobileSupportVersion,\n  nonFullScreenVideoModeAPISupportVersion,\n} from '../internal/constants';\n\nexport namespace media {\n  /**\n   * Enum for file formats supported\n   */\n  export enum FileFormat {\n    Base64 = 'base64',\n    ID = 'id',\n  }\n\n  /**\n   * File object that can be used to represent image or video or audio\n   */\n  export class File {\n    /**\n     * Content of the file. When format is Base64, this is the base64 content\n     * When format is ID, this is id mapping to the URI\n     * When format is base64 and app needs to use this directly in HTML tags, it should convert this to dataUrl.\n     */\n    public content: string;\n\n    /**\n     * Format of the content\n     */\n    public format: FileFormat;\n\n    /**\n     * Size of the file in KB\n     */\n    public size: number;\n\n    /**\n     * MIME type. This can be used for constructing a dataUrl, if needed.\n     */\n    public mimeType: string;\n\n    /**\n     * Optional: Name of the file\n     */\n    public name?: string;\n  }\n\n  /**\n   * Launch camera, capture image or choose image from gallery and return the images as a File[] object to the callback.\n   * Callback will be called with an error, if there are any. App should first check the error.\n   * If it is present the user can be updated with appropriate error message.\n   * If error is null or undefined, then files will have the required result.\n   * Note: Currently we support getting one File through this API, i.e. the file arrays size will be one.\n   * Note: For desktop, this API is not supported. Callback will be resolved with ErrorCode.NotSupported.\n   * @see File\n   * @see SdkError\n   */\n  export function captureImage(callback: (error: SdkError, files: File[]) => void): void {\n    if (!callback) {\n      throw new Error('[captureImage] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\n\n    if (!GlobalVars.isFramelessWindow) {\n      const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\n      callback(notSupportedError, undefined);\n      return;\n    }\n\n    if (!isAPISupportedByPlatform(captureImageMobileSupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, undefined);\n      return;\n    }\n\n    sendMessageToParent('captureImage', callback);\n  }\n\n  /**\n   * Media object returned by the select Media API\n   */\n  export class Media extends File {\n    constructor(that: Media = null) {\n      super();\n      if (that) {\n        this.content = that.content;\n        this.format = that.format;\n        this.mimeType = that.mimeType;\n        this.name = that.name;\n        this.preview = that.preview;\n        this.size = that.size;\n      }\n    }\n\n    /**\n     * A preview of the file which is a lightweight representation.\n     * In case of images this will be a thumbnail/compressed image in base64 encoding.\n     */\n    public preview: string;\n\n    /**\n     * Gets the media in chunks irrespecitve of size, these chunks are assembled and sent back to the webapp as file/blob\n     * @param callback returns blob of media\n     */\n    public getMedia(callback: (error: SdkError, blob: Blob) => void): void {\n      if (!callback) {\n        throw new Error('[get Media] Callback cannot be null');\n      }\n      ensureInitialized(FrameContexts.content, FrameContexts.task);\n      if (!isAPISupportedByPlatform(mediaAPISupportVersion)) {\n        const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n        callback(oldPlatformError, null);\n        return;\n      }\n      if (!validateGetMediaInputs(this.mimeType, this.format, this.content)) {\n        const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n        callback(invalidInput, null);\n        return;\n      }\n      // Call the new get media implementation via callbacks if the client version is greater than or equal to '2.0.0'\n      if (isAPISupportedByPlatform(getMediaCallbackSupportVersion)) {\n        this.getMediaViaCallback(callback);\n      } else {\n        this.getMediaViaHandler(callback);\n      }\n    }\n\n    private getMediaViaCallback(callback: (error: SdkError, blob: Blob) => void): void {\n      const helper: MediaHelper = {\n        mediaMimeType: this.mimeType,\n        assembleAttachment: [],\n      };\n      const localUriId = [this.content];\n      function handleGetMediaCallbackRequest(mediaResult: MediaResult): void {\n        if (callback) {\n          if (mediaResult && mediaResult.error) {\n            callback(mediaResult.error, null);\n          } else {\n            if (mediaResult && mediaResult.mediaChunk) {\n              // If the chunksequence number is less than equal to 0 implies EOF\n              // create file/blob when all chunks have arrived and we get 0/-1 as chunksequence number\n              if (mediaResult.mediaChunk.chunkSequence <= 0) {\n                const file = createFile(helper.assembleAttachment, helper.mediaMimeType);\n                callback(mediaResult.error, file);\n              } else {\n                // Keep pushing chunks into assemble attachment\n                const assemble: AssembleAttachment = decodeAttachment(mediaResult.mediaChunk, helper.mediaMimeType);\n                helper.assembleAttachment.push(assemble);\n              }\n            } else {\n              callback({ errorCode: ErrorCode.INTERNAL_ERROR, message: 'data received is null' }, null);\n            }\n          }\n        }\n      }\n      sendMessageToParent('getMedia', localUriId, handleGetMediaCallbackRequest);\n    }\n\n    private getMediaViaHandler(callback: (error: SdkError, blob: Blob) => void): void {\n      const actionName = generateGUID();\n      const helper: MediaHelper = {\n        mediaMimeType: this.mimeType,\n        assembleAttachment: [],\n      };\n      const params = [actionName, this.content];\n      this.content && callback && sendMessageToParent('getMedia', params);\n      function handleGetMediaRequest(response: string): void {\n        if (callback) {\n          const mediaResult: MediaResult = JSON.parse(response);\n          if (mediaResult.error) {\n            callback(mediaResult.error, null);\n            removeHandler('getMedia' + actionName);\n          } else {\n            if (mediaResult.mediaChunk) {\n              // If the chunksequence number is less than equal to 0 implies EOF\n              // create file/blob when all chunks have arrived and we get 0/-1 as chunksequence number\n              if (mediaResult.mediaChunk.chunkSequence <= 0) {\n                const file = createFile(helper.assembleAttachment, helper.mediaMimeType);\n                callback(mediaResult.error, file);\n                removeHandler('getMedia' + actionName);\n              } else {\n                // Keep pushing chunks into assemble attachment\n                const assemble: AssembleAttachment = decodeAttachment(mediaResult.mediaChunk, helper.mediaMimeType);\n                helper.assembleAttachment.push(assemble);\n              }\n            } else {\n              callback({ errorCode: ErrorCode.INTERNAL_ERROR, message: 'data received is null' }, null);\n              removeHandler('getMedia' + actionName);\n            }\n          }\n        }\n      }\n\n      registerHandler('getMedia' + actionName, handleGetMediaRequest);\n    }\n  }\n\n  /**\n   * Input parameter supplied to the select Media API\n   */\n  export interface MediaInputs {\n    /**\n     * Only one media type can be selected at a time\n     */\n    mediaType: MediaType;\n\n    /**\n     * max limit of media allowed to be selected in one go, current max limit is 10 set by office lens.\n     */\n    maxMediaCount: number;\n\n    /**\n     * Additional properties for customization of select media - Image in mobile devices\n     */\n    imageProps?: ImageProps;\n\n    /**\n     * Additional properties for customization of select media - Video in mobile devices\n     */\n    videoProps?: VideoProps;\n\n    /**\n     * Additional properties for customization of select media - VideoAndImage in mobile devices\n     */\n    videoAndImageProps?: VideoAndImageProps;\n\n    /**\n     * Additional properties for audio capture flows.\n     */\n    audioProps?: AudioProps;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * --------\n   * All properties common to Image and Video Props\n   */\n  interface MediaProps {\n    /**\n     * Optional; Lets the developer specify the media source, more than one can be specified.\n     * Default value is both camera and gallery\n     */\n    sources?: Source[];\n\n    /**\n     * Optional; Specify in which mode the camera will be opened.\n     * Default value is Photo\n     */\n    startMode?: CameraStartMode;\n\n    /**\n     * Optional; indicate if user is allowed to move between front and back camera\n     * Default value is true\n     */\n    cameraSwitcher?: boolean;\n  }\n\n  /**\n   *  All properties in ImageProps are optional and have default values in the platform\n   */\n  export interface ImageProps extends MediaProps {\n    /**\n     * Optional; indicate if inking on the selected Image is allowed or not\n     * Default value is true\n     */\n    ink?: boolean;\n\n    /**\n     * Optional; indicate if putting text stickers on the selected Image is allowed or not\n     * Default value is true\n     */\n    textSticker?: boolean;\n\n    /**\n     * Optional; indicate if image filtering mode is enabled on the selected image\n     * Default value is false\n     */\n    enableFilter?: boolean;\n\n    /**\n     * Optional; Lets the developer specify the image output formats, more than one can be specified.\n     * Default value is Image.\n     */\n    imageOutputFormats?: ImageOutputFormats[];\n  }\n\n  /**\n   * All properties in VideoProps are optional and have default values in the platform\n   */\n  export interface VideoProps extends MediaProps {\n    /**\n     * Optional; the maximum duration in seconds after which the recording should terminate automatically.\n     * Default value is defined by the platform serving the API.\n     */\n    maxDuration?: number;\n\n    /**\n     * Optional; to determine if the video capturing flow needs to be launched\n     * in Full Screen Mode (Lens implementation) or PictureInPicture Mode (Native implementation).\n     * Default value is true, indicating video will always launch in Full Screen Mode via lens.\n     */\n    isFullScreenMode?: boolean;\n\n    /**\n     * Optional; controls the visibility of stop button in PictureInPicture Mode.\n     * Default value is true, indicating the user will be able to stop the video.\n     */\n    isStopButtonVisible?: boolean;\n\n    /**\n     * Optional; setting VideoController will register your app to listen to the lifecycle events during the video capture flow.\n     * Your app can also dynamically control the experience while capturing the video by notifying the host client.\n     */\n    videoController?: VideoController;\n  }\n\n  /**\n   * All properties in VideoAndImageProps are optional and have default values in the platform\n   */\n  export interface VideoAndImageProps extends ImageProps, VideoProps {}\n\n  /**\n   *  All properties in AudioProps are optional and have default values in the platform\n   */\n  export interface AudioProps {\n    /**\n     * Optional; the maximum duration in minutes after which the recording should terminate automatically\n     * Default value is defined by the platform serving the API.\n     */\n    maxDuration?: number;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * --------\n   * Base class which holds the callback and notifies events to the host client\n   */\n  abstract class MediaController<T> {\n    protected controllerCallback: T;\n\n    public constructor(controllerCallback?: T) {\n      this.controllerCallback = controllerCallback;\n    }\n\n    protected abstract getMediaType(): MediaType;\n\n    /**\n     * @private\n     * Hide from docs\n     * --------\n     * This function will be implemented by the respective media class which holds the logic\n     * of specific events that needs to be notified to the app.\n     * @param mediaEvent indicates the event signed by the host client to the app\n     */\n    protected abstract notifyEventToApp(mediaEvent: MediaControllerEvent): void;\n\n    /**\n     * @private\n     * Hide from docs\n     * --------\n     * Function to notify the host client to programatically control the experience\n     * @param mediaEvent indicates what the event that needs to be signaled to the host client\n     * Optional; @param callback is used to send app if host client has successfully handled the notification event or not\n     */\n    protected notifyEventToHost(mediaEvent: MediaControllerEvent, callback?: (err?: SdkError) => void): void {\n      ensureInitialized(FrameContexts.content, FrameContexts.task);\n      const err = isApiSupportedOnMobile(nonFullScreenVideoModeAPISupportVersion);\n      if (err) {\n        if (callback) {\n          callback(err);\n        }\n        return;\n      }\n\n      const params: MediaControllerParam = { mediaType: this.getMediaType(), mediaControllerEvent: mediaEvent };\n      sendMessageToParent('media.controller', [params], (err?: SdkError) => {\n        if (callback) {\n          callback(err);\n        }\n      });\n    }\n\n    /**\n     * Function to programatically stop the ongoing media event\n     * Optional; @param callback is used to send app if host client has successfully stopped the event or not\n     */\n    public stop(callback?: (err?: SdkError) => void): void {\n      this.notifyEventToHost(MediaControllerEvent.StopRecording, callback);\n    }\n  }\n\n  /**\n   * Callback which will register your app to listen to lifecycle events during the video capture flow\n   */\n  export interface VideoControllerCallback {\n    onRecordingStarted?(): void;\n  }\n\n  /**\n   * VideoController class is used to communicate between the app and the host client during the video capture flow\n   */\n  export class VideoController extends MediaController<VideoControllerCallback> {\n    protected getMediaType(): MediaType {\n      return MediaType.Video;\n    }\n\n    public notifyEventToApp(mediaEvent: MediaControllerEvent): void {\n      if (!this.controllerCallback) {\n        // Early return as app has not registered with the callback\n        return;\n      }\n\n      switch (mediaEvent) {\n        case MediaControllerEvent.StartRecording:\n          if (this.controllerCallback.onRecordingStarted) {\n            this.controllerCallback.onRecordingStarted();\n            break;\n          }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * --------\n   * Events which are used to communicate between the app and the host client during the media recording flow\n   */\n  enum MediaControllerEvent {\n    StartRecording = 1,\n    StopRecording = 2,\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * --------\n   * Interface with relevant info to send communication from the app to the host client\n   */\n  interface MediaControllerParam {\n    /**\n     * List of team information\n     */\n    mediaType: media.MediaType;\n\n    /**\n     * List of team information\n     */\n    mediaControllerEvent: MediaControllerEvent;\n  }\n\n  /**\n   * The modes in which camera can be launched in select Media API\n   */\n  export enum CameraStartMode {\n    Photo = 1,\n    Document = 2,\n    Whiteboard = 3,\n    BusinessCard = 4,\n  }\n\n  /**\n   * Specifies the image source\n   */\n  export enum Source {\n    Camera = 1,\n    Gallery = 2,\n  }\n\n  /**\n   * Specifies the type of Media\n   */\n  export enum MediaType {\n    Image = 1,\n    Video = 2,\n    VideoAndImage = 3,\n    Audio = 4,\n  }\n\n  /**\n   * Input for view images API\n   */\n  export interface ImageUri {\n    value: string;\n    type: ImageUriType;\n  }\n\n  /**\n   * ID contains a mapping for content uri on platform's side, URL is generic\n   */\n  export enum ImageUriType {\n    ID = 1,\n    URL = 2,\n  }\n\n  /**\n   * Specifies the image output formats.\n   */\n  export enum ImageOutputFormats {\n    IMAGE = 1,\n    PDF = 2,\n  }\n\n  /**\n   * Media chunks an output of getMedia API from platform\n   */\n  export interface MediaChunk {\n    /**\n     * Base 64 data for the requested uri\n     */\n    chunk: string;\n\n    /**\n     * chunk sequence number​\n     */\n    chunkSequence: number;\n  }\n\n  /**\n   * Output of getMedia API from platform\n   */\n  interface MediaResult {\n    /**\n     * error encountered in getMedia API\n     */\n    error: SdkError;\n\n    /**\n     * Media chunk which will be assemebled and converted into a blob\n     */\n    mediaChunk: MediaChunk;\n  }\n\n  /**\n   * Helper object to assembled media chunks\n   */\n  export interface AssembleAttachment {\n    sequence: number;\n    file: Blob;\n  }\n\n  /**\n   * Helper class for assembling media\n   */\n  interface MediaHelper {\n    mediaMimeType: string;\n    assembleAttachment: AssembleAttachment[];\n  }\n\n  /**\n   * Select an attachment using camera/gallery\n   * @param mediaInputs The input params to customize the media to be selected\n   * @param callback The callback to invoke after fetching the media\n   */\n  export function selectMedia(\n    mediaInputs: MediaInputs,\n    callback: (error: SdkError, attachments: Media[]) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[select Media] Callback cannot be null');\n    }\n\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\n    if (!isAPISupportedByPlatform(mediaAPISupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, null);\n      return;\n    }\n\n    const err = isMediaCallSupportedOnMobile(mediaInputs);\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    if (!validateSelectMediaInputs(mediaInputs)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, null);\n      return;\n    }\n\n    const params = [mediaInputs];\n    // What comes back from native as attachments would just be objects and will be missing getMedia method on them\n    sendMessageToParent(\n      'selectMedia',\n      params,\n      (err: SdkError, localAttachments?: Media[], mediaEvent?: MediaControllerEvent) => {\n        // MediaControllerEvent response is used to notify the app about events and is a partial response to selectMedia\n        if (mediaEvent) {\n          if (isVideoControllerRegistered(mediaInputs)) {\n            mediaInputs.videoProps.videoController.notifyEventToApp(mediaEvent);\n          }\n          return;\n        }\n\n        // Media Attachments are final response to selectMedia\n        if (!localAttachments) {\n          callback(err, null);\n          return;\n        }\n\n        const mediaArray: Media[] = [];\n        for (const attachment of localAttachments) {\n          mediaArray.push(new Media(attachment));\n        }\n        callback(err, mediaArray);\n      },\n    );\n  }\n\n  /**\n   * View images using native image viewer\n   * @param uriList urilist of images to be viewed - can be content uri or server url. supports upto 10 Images in one go\n   * @param callback returns back error if encountered, returns null in case of success\n   */\n  export function viewImages(uriList: ImageUri[], callback: (error?: SdkError) => void): void {\n    if (!callback) {\n      throw new Error('[view images] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\n\n    if (!isAPISupportedByPlatform(mediaAPISupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError);\n      return;\n    }\n    if (!validateViewImagesInput(uriList)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput);\n      return;\n    }\n\n    const params = [uriList];\n    sendMessageToParent('viewImages', params, callback);\n  }\n\n  /**\n   * Barcode configuration supplied to scanBarCode API to customize barcode scanning experience in mobile\n   * All properties in BarCodeConfig are optional and have default values in the platform\n   */\n  export interface BarCodeConfig {\n    /**\n     * Optional; Lets the developer specify the scan timeout interval in seconds\n     * Default value is 30 seconds and max allowed value is 60 seconds\n     */\n    timeOutIntervalInSec?: number;\n  }\n\n  /**\n   * Scan Barcode/QRcode using camera\n   * Note: For desktop and web, this API is not supported. Callback will be resolved with ErrorCode.NotSupported.\n   * @param callback callback to invoke after scanning the barcode\n   * @param config optional input configuration to customize the barcode scanning experience\n   */\n  export function scanBarCode(callback: (error: SdkError, decodedText: string) => void, config?: BarCodeConfig): void {\n    if (!callback) {\n      throw new Error('[media.scanBarCode] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\n\n    if (\n      GlobalVars.hostClientType === HostClientType.desktop ||\n      GlobalVars.hostClientType === HostClientType.web ||\n      GlobalVars.hostClientType === HostClientType.rigel ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsWindows ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsAndroid ||\n      GlobalVars.hostClientType === HostClientType.teamsPhones ||\n      GlobalVars.hostClientType === HostClientType.teamsDisplays\n    ) {\n      const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\n      callback(notSupportedError, null);\n      return;\n    }\n\n    if (!isAPISupportedByPlatform(scanBarCodeAPIMobileSupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, null);\n      return;\n    }\n\n    if (!validateScanBarCodeInput(config)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, null);\n      return;\n    }\n\n    sendMessageToParent('media.scanBarCode', [config], callback);\n  }\n}\n","import { people } from '../public/people';\nimport { media } from '../public/media';\nimport { SdkError } from '../public/interfaces';\nimport {\n  videoAndImageMediaAPISupportVersion,\n  nonFullScreenVideoModeAPISupportVersion,\n  imageOutputFormatsAPISupportVersion,\n} from './constants';\nimport { isApiSupportedOnMobile } from './internalAPIs';\n\n/**\n * Helper function to create a blob from media chunks based on their sequence\n */\nexport function createFile(assembleAttachment: media.AssembleAttachment[], mimeType: string): Blob {\n  if (assembleAttachment == null || mimeType == null || assembleAttachment.length <= 0) {\n    return null;\n  }\n  let file: Blob;\n  let sequence = 1;\n  assembleAttachment.sort((a, b) => (a.sequence > b.sequence ? 1 : -1));\n  assembleAttachment.forEach(item => {\n    if (item.sequence == sequence) {\n      if (file) {\n        file = new Blob([file, item.file], { type: mimeType });\n      } else {\n        file = new Blob([item.file], { type: mimeType });\n      }\n      sequence++;\n    }\n  });\n  return file;\n}\n\n/**\n * Helper function to convert Media chunks into another object type which can be later assemebled\n * Converts base 64 encoded string to byte array and then into an array of blobs\n */\nexport function decodeAttachment(attachment: media.MediaChunk, mimeType: string): media.AssembleAttachment {\n  if (attachment == null || mimeType == null) {\n    return null;\n  }\n  const decoded = atob(attachment.chunk);\n  const byteNumbers = new Array(decoded.length);\n  for (let i = 0; i < decoded.length; i++) {\n    byteNumbers[i] = decoded.charCodeAt(i);\n  }\n  const byteArray = new Uint8Array(byteNumbers);\n  const blob: Blob = new Blob([byteArray], { type: mimeType });\n  const assemble: media.AssembleAttachment = {\n    sequence: attachment.chunkSequence,\n    file: blob,\n  };\n  return assemble;\n}\n\n/**\n * Function returns null if the media call is supported on current mobile version, else SdkError.\n */\nexport function isMediaCallSupportedOnMobile(mediaInputs: media.MediaInputs): SdkError {\n  if (isMediaCallForVideoAndImageInputs(mediaInputs)) {\n    return isApiSupportedOnMobile(videoAndImageMediaAPISupportVersion);\n  } else if (isMediaCallForNonFullScreenVideoMode(mediaInputs)) {\n    return isApiSupportedOnMobile(nonFullScreenVideoModeAPISupportVersion);\n  } else if (isMediaCallForImageOutputFormats(mediaInputs)) {\n    return isApiSupportedOnMobile(imageOutputFormatsAPISupportVersion);\n  }\n  return null;\n}\n\n/**\n * Function returns true if the app has registered to listen to video controller events, else false.\n */\nexport function isVideoControllerRegistered(mediaInputs: media.MediaInputs): boolean {\n  if (\n    mediaInputs.mediaType == media.MediaType.Video &&\n    mediaInputs.videoProps &&\n    mediaInputs.videoProps.videoController\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the mediaInput params are valid and false otherwise\n */\nexport function validateSelectMediaInputs(mediaInputs: media.MediaInputs): boolean {\n  if (mediaInputs == null || mediaInputs.maxMediaCount > 10) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns true if the mediaInput params are called for mediatype Image and contains Image outputs formats, false otherwise\n */\nexport function isMediaCallForImageOutputFormats(mediaInputs: media.MediaInputs): boolean {\n  if (mediaInputs?.mediaType == media.MediaType.Image && mediaInputs?.imageProps?.imageOutputFormats) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the mediaInput params are called for mediatype VideoAndImage and false otherwise\n */\nexport function isMediaCallForVideoAndImageInputs(mediaInputs: media.MediaInputs): boolean {\n  if (mediaInputs && (mediaInputs.mediaType == media.MediaType.VideoAndImage || mediaInputs.videoAndImageProps)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the mediaInput params are called for non-full screen video mode and false otherwise\n */\nexport function isMediaCallForNonFullScreenVideoMode(mediaInputs: media.MediaInputs): boolean {\n  if (\n    mediaInputs &&\n    mediaInputs.mediaType == media.MediaType.Video &&\n    mediaInputs.videoProps &&\n    !mediaInputs.videoProps.isFullScreenMode\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the get Media params are valid and false otherwise\n */\nexport function validateGetMediaInputs(mimeType: string, format: media.FileFormat, content: string): boolean {\n  if (mimeType == null || format == null || format != media.FileFormat.ID || content == null) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns true if the view images param is valid and false otherwise\n */\nexport function validateViewImagesInput(uriList: media.ImageUri[]): boolean {\n  if (uriList == null || uriList.length <= 0 || uriList.length > 10) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns true if the scan barcode param is valid and false otherwise\n */\nexport function validateScanBarCodeInput(barCodeConfig: media.BarCodeConfig): boolean {\n  if (barCodeConfig) {\n    if (\n      barCodeConfig.timeOutIntervalInSec === null ||\n      barCodeConfig.timeOutIntervalInSec <= 0 ||\n      barCodeConfig.timeOutIntervalInSec > 60\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns true if the people picker params are valid and false otherwise\n */\nexport function validatePeoplePickerInput(peoplePickerInputs: people.PeoplePickerInputs): boolean {\n  if (peoplePickerInputs) {\n    if (peoplePickerInputs.title) {\n      if (typeof peoplePickerInputs.title !== 'string') {\n        return false;\n      }\n    }\n\n    if (peoplePickerInputs.setSelected) {\n      if (typeof peoplePickerInputs.setSelected !== 'object') {\n        return false;\n      }\n    }\n\n    if (peoplePickerInputs.openOrgWideSearchInChatOrChannel) {\n      if (typeof peoplePickerInputs.openOrgWideSearchInChatOrChannel !== 'boolean') {\n        return false;\n      }\n    }\n    if (peoplePickerInputs.singleSelect) {\n      if (typeof peoplePickerInputs.singleSelect !== 'boolean') {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","export * from './private/index';\nexport * from './public/index';\n","export { bot } from './bot';\nexport { logs } from './logs';\nexport {\n  ChatMembersInformation,\n  FilePreviewParameters,\n  NotificationTypes,\n  ShowNotificationParameters,\n  TeamInstanceParameters,\n  ThreadMember,\n  UserJoinedTeamsInformation,\n  ViewerActionTypes,\n  UserSettingTypes,\n} from './interfaces';\nexport {\n  enterFullscreen,\n  exitFullscreen,\n  getChatMembers,\n  getConfigSetting,\n  getUserJoinedTeams,\n  openFilePreview,\n  sendCustomMessage,\n  showNotification,\n  sendCustomEvent,\n  registerCustomHandler,\n  uploadCustomApp,\n  registerUserSettingsChangeHandler,\n} from './privateAPIs';\nexport { conversations } from './conversations';\nexport { meetingRoom } from './meetingRoom';\nexport { remoteCamera } from './remoteCamera';\nexport { files } from './files';\nexport { appEntity } from './appEntity';\nexport { teams } from './teams';\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\n\n/**\n * @private\n * Namespace to interact with bots using the SDK.\n */\nexport namespace bot {\n  /**\n   * @private\n   * Hide from docs until release.\n   * ------\n   * Sends query to bot in order to retrieve data.\n   * @param botRequest query to send to bot.\n   * @param onSuccess callback to invoke when data is retrieved from bot\n   * @param onError callback to invoke should an error occur\n   */\n  export function sendQuery(\n    botRequest: QueryRequest,\n    onSuccess?: (data: QueryResponse) => void,\n    onError?: (error: string) => void,\n  ): void {\n    ensureInitialized();\n\n    sendMessageToParent('bot.executeQuery', [botRequest], (success: boolean, response: string | QueryResponse) => {\n      if (success) {\n        onSuccess(response as QueryResponse);\n      } else {\n        onError(response as string);\n      }\n    });\n  }\n  /**\n   * @private\n   * Hide from docs until release.\n   * -----\n   * Retrieves list of support commands from bot\n   * @param onSuccess callback to invoke when data is retrieved from bot\n   * @param onError callback to invoke should an error occur\n   */\n  export function getSupportedCommands(\n    onSuccess?: (response: Command[]) => void,\n    onError?: (error: string) => void,\n  ): void {\n    ensureInitialized();\n\n    sendMessageToParent('bot.getSupportedCommands', (success: boolean, response: string | Command[]) => {\n      if (success) {\n        onSuccess(response as Command[]);\n      } else {\n        onError(response as string);\n      }\n    });\n  }\n  /**\n   * @private\n   * Hide from docs until release.\n   * -----\n   * Authenticates a user for json tab\n   * @param authRequest callback to invoke when data is retrieved from bot\n   * @param onSuccess callback to invoke when user is authenticated\n   * @param onError callback to invoke should an error occur\n   */\n  export function authenticate(\n    authRequest: AuthQueryRequest,\n    onSuccess?: (results: Results) => void,\n    onError?: (error: string) => void,\n  ): void {\n    ensureInitialized();\n\n    sendMessageToParent('bot.authenticate', [authRequest], (success: boolean, response: string | Results) => {\n      if (success) {\n        onSuccess(response as Results);\n      } else {\n        onError(response as string);\n      }\n    });\n  }\n\n  export interface QueryRequest {\n    /**\n     * Query to search for\n     */\n    query: string;\n    commandId?: string;\n    option?: {\n      skip: number;\n      count: number;\n    };\n  }\n\n  export interface QueryResponse {\n    data: Results | Auth;\n    type: ResponseType;\n  }\n\n  export interface Results {\n    attachments: Attachment[];\n    layout: any;\n    botId: string;\n  }\n\n  export interface Auth {\n    url: string;\n    title: string;\n  }\n\n  export interface AuthQueryRequest extends QueryRequest {\n    url: string;\n  }\n\n  export interface Attachment {\n    card: any;\n    previewCard: any;\n    previewRawPayload: any;\n    rawPayload: any;\n  }\n\n  export interface Command {\n    title: string;\n    id: string;\n    initialRun: boolean;\n  }\n\n  export enum ResponseType {\n    Results = 'Results',\n    Auth = 'Auth',\n  }\n}\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { version } from '../internal/constants';\nimport { sendMessageToParent } from '../internal/communication';\n\nexport namespace appInitialization {\n  export const Messages = {\n    AppLoaded: 'appInitialization.appLoaded',\n    Success: 'appInitialization.success',\n    Failure: 'appInitialization.failure',\n    ExpectedFailure: 'appInitialization.expectedFailure',\n  };\n\n  export enum FailedReason {\n    AuthFailed = 'AuthFailed',\n    Timeout = 'Timeout',\n    Other = 'Other',\n  }\n\n  export enum ExpectedFailureReason {\n    PermissionError = 'PermissionError',\n    NotFound = 'NotFound',\n    Throttling = 'Throttling',\n    Offline = 'Offline',\n    Other = 'Other',\n  }\n\n  export interface IFailedRequest {\n    reason: FailedReason;\n    message?: string;\n  }\n\n  export interface IExpectedFailureRequest {\n    reason: ExpectedFailureReason;\n    message?: string;\n  }\n\n  /**\n   * Notifies the frame that app has loaded and to hide the loading indicator if one is shown.\n   */\n  export function notifyAppLoaded(): void {\n    ensureInitialized();\n    sendMessageToParent(Messages.AppLoaded, [version]);\n  }\n\n  /**\n   * Notifies the frame that app initialization is successful and is ready for user interaction.\n   */\n  export function notifySuccess(): void {\n    ensureInitialized();\n    sendMessageToParent(Messages.Success, [version]);\n  }\n\n  /**\n   * Notifies the frame that app initialization has failed and to show an error page in its place.\n   */\n  export function notifyFailure(appInitializationFailedRequest: IFailedRequest): void {\n    ensureInitialized();\n    sendMessageToParent(Messages.Failure, [\n      appInitializationFailedRequest.reason,\n      appInitializationFailedRequest.message,\n    ]);\n  }\n\n  /**\n   * Notifies the frame that app initialized with some expected errors.\n   */\n  export function notifyExpectedFailure(expectedFailureRequest: IExpectedFailureRequest): void {\n    ensureInitialized();\n    sendMessageToParent(Messages.ExpectedFailure, [expectedFailureRequest.reason, expectedFailureRequest.message]);\n  }\n}\n","import { ensureInitialized, processAdditionalValidOrigins } from '../internal/internalAPIs';\nimport { GlobalVars } from '../internal/globalVars';\nimport { defaultSDKVersionForCompatCheck } from '../internal/constants';\nimport { settings } from './settings';\nimport {\n  TabInformation,\n  TabInstanceParameters,\n  DeepLinkParameters,\n  Context,\n  LoadContext,\n  FrameContext,\n} from './interfaces';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { logs } from '../private/logs';\nimport { FrameContexts } from './constants';\nimport {\n  Communication,\n  initializeCommunication,\n  sendMessageToParent,\n  uninitializeCommunication,\n} from '../internal/communication';\nimport { authentication } from './authentication';\nimport { initializePrivateApis } from '../private/privateAPIs';\nimport { menus } from './menus';\nimport * as Handlers from '../internal/handlers'; // Conflict with some names\n\n// ::::::::::::::::::::::: MicrosoftTeams SDK public API ::::::::::::::::::::\n/**\n * Initializes the library. This must be called before any other SDK calls\n * but after the frame is loaded successfully.\n * @param callback Optionally specify a callback to invoke when Teams SDK has successfully initialized\n * @param validMessageOrigins Optionally specify a list of cross frame message origins. There must have\n * https: protocol otherwise they will be ignored. Example: https://www.example.com\n */\nexport function initialize(callback?: () => void, validMessageOrigins?: string[]): void {\n  // Independent components might not know whether the SDK is initialized so might call it to be safe.\n  // Just no-op if that happens to make it easier to use.\n  if (!GlobalVars.initializeCalled) {\n    GlobalVars.initializeCalled = true;\n\n    Handlers.initializeHandlers();\n    initializeCommunication(\n      (\n        context: FrameContexts,\n        clientType: string,\n        clientSupportedSDKVersion: string = defaultSDKVersionForCompatCheck,\n      ) => {\n        GlobalVars.frameContext = context;\n        GlobalVars.hostClientType = clientType;\n        GlobalVars.clientSupportedSDKVersion = clientSupportedSDKVersion;\n\n        // Notify all waiting callers that the initialization has completed\n        GlobalVars.initializeCallbacks.forEach(initCallback => initCallback());\n        GlobalVars.initializeCallbacks = [];\n        GlobalVars.initializeCompleted = true;\n      },\n      validMessageOrigins,\n    );\n\n    authentication.initialize();\n    settings.initialize();\n    menus.initialize();\n    initializePrivateApis();\n  }\n\n  // Handle additional valid message origins if specified\n  if (Array.isArray(validMessageOrigins)) {\n    processAdditionalValidOrigins(validMessageOrigins);\n  }\n\n  // Handle the callback if specified:\n  // 1. If initialization has already completed then just call it right away\n  // 2. If initialization hasn't completed then add it to the array of callbacks\n  //    that should be invoked once initialization does complete\n  if (callback) {\n    GlobalVars.initializeCompleted ? callback() : GlobalVars.initializeCallbacks.push(callback);\n  }\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n * Undocumented function used to set a mock window for unit tests\n */\nexport function _initialize(hostWindow: any): void {\n  Communication.currentWindow = hostWindow;\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n * Undocumented function used to clear state between unit tests\n */\nexport function _uninitialize(): void {\n  //used to clear state between unit tests\n\n  if (!GlobalVars.initializeCalled) {\n    return;\n  }\n  if (GlobalVars.frameContext) {\n    registerOnThemeChangeHandler(null);\n    registerFullScreenHandler(null);\n    registerBackButtonHandler(null);\n    registerBeforeUnloadHandler(null);\n    registerFocusEnterHandler(null);\n    registerOnLoadHandler(null);\n    logs.registerGetLogHandler(null);\n  }\n\n  if (GlobalVars.frameContext === FrameContexts.settings) {\n    settings.registerOnSaveHandler(null);\n  }\n\n  if (GlobalVars.frameContext === FrameContexts.remove) {\n    settings.registerOnRemoveHandler(null);\n  }\n\n  GlobalVars.initializeCalled = false;\n  GlobalVars.initializeCompleted = false;\n  GlobalVars.initializeCallbacks = [];\n  GlobalVars.additionalValidOrigins = [];\n  GlobalVars.frameContext = null;\n  GlobalVars.hostClientType = null;\n  GlobalVars.isFramelessWindow = false;\n\n  uninitializeCommunication();\n}\n\n/**\n * Enable print capability to support printing page using Ctrl+P and cmd+P\n */\nexport function enablePrintCapability(): void {\n  if (!GlobalVars.printCapabilityEnabled) {\n    GlobalVars.printCapabilityEnabled = true;\n    ensureInitialized();\n    // adding ctrl+P and cmd+P handler\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\n      if ((event.ctrlKey || event.metaKey) && event.keyCode === 80) {\n        print();\n        event.cancelBubble = true;\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    });\n  }\n}\n\n/**\n * default print handler\n */\nexport function print(): void {\n  window.print();\n}\n\n/**\n * Retrieves the current context the frame is running in.\n * @param callback The callback to invoke when the {@link Context} object is retrieved.\n */\nexport function getContext(callback: (context: Context) => void): void {\n  ensureInitialized();\n\n  sendMessageToParent('getContext', (context: Context) => {\n    if (!context.frameContext) {\n      // Fallback logic for frameContext properties\n      context.frameContext = GlobalVars.frameContext;\n    }\n    callback(context);\n  });\n}\n\n/**\n * Registers a handler for theme changes.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n * @param handler The handler to invoke when the user changes their theme.\n */\nexport function registerOnThemeChangeHandler(handler: (theme: string) => void): void {\n  ensureInitialized();\n  Handlers.registerOnThemeChangeHandler(handler);\n}\n\n/**\n * Registers a handler for changes from or to full-screen view for a tab.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n * @param handler The handler to invoke when the user toggles full-screen view for a tab.\n */\nexport function registerFullScreenHandler(handler: (isFullScreen: boolean) => void): void {\n  ensureInitialized();\n  Handlers.registerHandler('fullScreenChange', handler);\n}\n\n/**\n * Registers a handler for clicking the app button.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n * @param handler The handler to invoke when the personal app button is clicked in the app bar.\n */\nexport function registerAppButtonClickHandler(handler: () => void): void {\n  ensureInitialized(FrameContexts.content);\n  Handlers.registerHandler('appButtonClick', handler);\n}\n\n/**\n * Registers a handler for entering hover of the app button.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n * @param handler The handler to invoke when entering hover of the personal app button in the app bar.\n */\nexport function registerAppButtonHoverEnterHandler(handler: () => void): void {\n  ensureInitialized(FrameContexts.content);\n  Handlers.registerHandler('appButtonHoverEnter', handler);\n}\n\n/**\n * Registers a handler for exiting hover of the app button.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n * @param handler The handler to invoke when exiting hover of the personal app button in the app bar.\n */\nexport function registerAppButtonHoverLeaveHandler(handler: () => void): void {\n  ensureInitialized(FrameContexts.content);\n  Handlers.registerHandler('appButtonHoverLeave', handler);\n}\n\n/**\n * Registers a handler for user presses of the Team client's back button. Experiences that maintain an internal\n * navigation stack should use this handler to navigate the user back within their frame. If an app finds\n * that after running its back button handler it cannot handle the event it should call the navigateBack\n * method to ask the Teams client to handle it instead.\n * @param handler The handler to invoke when the user presses their Team client's back button.\n */\nexport function registerBackButtonHandler(handler: () => boolean): void {\n  ensureInitialized();\n  Handlers.registerBackButtonHandler(handler);\n}\n\n/**\n * @private\n * Registers a handler to be called when the page has been requested to load.\n * @param handler The handler to invoke when the page is loaded.\n */\nexport function registerOnLoadHandler(handler: (context: LoadContext) => void): void {\n  ensureInitialized();\n  Handlers.registerOnLoadHandler(handler);\n}\n\n/**\n * @private\n * Registers a handler to be called before the page is unloaded.\n * @param handler The handler to invoke before the page is unloaded. If this handler returns true the page should\n * invoke the readyToUnload function provided to it once it's ready to be unloaded.\n */\nexport function registerBeforeUnloadHandler(handler: (readyToUnload: () => void) => boolean): void {\n  ensureInitialized();\n  Handlers.registerBeforeUnloadHandler(handler);\n}\n\n/**\n * @private\n * Registers a handler when focus needs to be passed from teams to the place of choice on app.\n * @param handler The handler to invoked by the app when they want the focus to be in the place of their choice.\n */\nexport function registerFocusEnterHandler(handler: (navigateForward: boolean) => void): void {\n  ensureInitialized();\n  Handlers.registerFocusEnterHandler(handler);\n}\n\n/**\n * Registers a handler for when the user reconfigurated tab\n * @param handler The handler to invoke when the user click on Settings.\n */\nexport function registerChangeSettingsHandler(handler: () => void): void {\n  ensureInitialized(FrameContexts.content);\n  Handlers.registerHandler('changeSettings', handler);\n}\n\n/**\n * Allows an app to retrieve for this user tabs that are owned by this app.\n * If no TabInstanceParameters are passed, the app defaults to favorite teams and favorite channels.\n * @param callback The callback to invoke when the {@link TabInstanceParameters} object is retrieved.\n * @param tabInstanceParameters OPTIONAL Flags that specify whether to scope call to favorite teams or channels.\n */\nexport function getTabInstances(\n  callback: (tabInfo: TabInformation) => void,\n  tabInstanceParameters?: TabInstanceParameters,\n): void {\n  ensureInitialized();\n\n  sendMessageToParent('getTabInstances', [tabInstanceParameters], callback);\n}\n\n/**\n * Allows an app to retrieve the most recently used tabs for this user.\n * @param callback The callback to invoke when the {@link TabInformation} object is retrieved.\n * @param tabInstanceParameters OPTIONAL Ignored, kept for future use\n */\nexport function getMruTabInstances(\n  callback: (tabInfo: TabInformation) => void,\n  tabInstanceParameters?: TabInstanceParameters,\n): void {\n  ensureInitialized();\n\n  sendMessageToParent('getMruTabInstances', [tabInstanceParameters], callback);\n}\n\n/**\n * Shares a deep link that a user can use to navigate back to a specific state in this page.\n * @param deepLinkParameters ID and label for the link and fallback URL.\n */\nexport function shareDeepLink(deepLinkParameters: DeepLinkParameters): void {\n  ensureInitialized(FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n\n  sendMessageToParent('shareDeepLink', [\n    deepLinkParameters.subEntityId,\n    deepLinkParameters.subEntityLabel,\n    deepLinkParameters.subEntityWebUrl,\n  ]);\n}\n\n/**\n * execute deep link API.\n * @param deepLink deep link.\n */\nexport function executeDeepLink(deepLink: string, onComplete?: (status: boolean, reason?: string) => void): void {\n  ensureInitialized(\n    FrameContexts.content,\n    FrameContexts.sidePanel,\n    FrameContexts.settings,\n    FrameContexts.task,\n    FrameContexts.stage,\n    FrameContexts.meetingStage,\n  );\n  sendMessageToParent('executeDeepLink', [deepLink], onComplete ? onComplete : getGenericOnCompleteHandler());\n}\n\nexport function setFrameContext(frameContext: FrameContext): void {\n  ensureInitialized(FrameContexts.content);\n  sendMessageToParent('setFrameContext', [frameContext]);\n}\n\nexport function initializeWithFrameContext(\n  frameContext: FrameContext,\n  callback?: () => void,\n  validMessageOrigins?: string[],\n): void {\n  initialize(callback, validMessageOrigins);\n  setFrameContext(frameContext);\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { TabInstance } from './interfaces';\nimport { FrameContexts } from './constants';\nimport { sendMessageToParent } from '../internal/communication';\n\n/**\n * Navigation specific part of the SDK.\n */\n\n/**\n * Return focus to the main Teams app. Will focus search bar if navigating forward and app bar if navigating back.\n * @param navigateForward Determines the direction to focus in teams app.\n */\nexport function returnFocus(navigateForward?: boolean): void {\n  ensureInitialized();\n\n  sendMessageToParent('returnFocus', [navigateForward]);\n}\n\n/**\n * Navigates the Microsoft Teams app to the specified tab instance.\n * @param tabInstance The tab instance to navigate to.\n */\nexport function navigateToTab(tabInstance: TabInstance, onComplete?: (status: boolean, reason?: string) => void): void {\n  ensureInitialized();\n\n  const errorMessage = 'Invalid internalTabInstanceId and/or channelId were/was provided';\n  sendMessageToParent(\n    'navigateToTab',\n    [tabInstance],\n    onComplete ? onComplete : getGenericOnCompleteHandler(errorMessage),\n  );\n}\n\n/**\n * Navigates the frame to a new cross-domain URL. The domain of this URL must match at least one of the\n * valid domains specified in the validDomains block of the manifest; otherwise, an exception will be\n * thrown. This function needs to be used only when navigating the frame to a URL in a different domain\n * than the current one in a way that keeps the app informed of the change and allows the SDK to\n * continue working.\n * @param url The URL to navigate the frame to.\n */\nexport function navigateCrossDomain(url: string, onComplete?: (status: boolean, reason?: string) => void): void {\n  ensureInitialized(\n    FrameContexts.content,\n    FrameContexts.sidePanel,\n    FrameContexts.settings,\n    FrameContexts.remove,\n    FrameContexts.task,\n    FrameContexts.stage,\n    FrameContexts.meetingStage,\n  );\n\n  const errorMessage =\n    'Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.';\n  sendMessageToParent(\n    'navigateCrossDomain',\n    [url],\n    onComplete ? onComplete : getGenericOnCompleteHandler(errorMessage),\n  );\n}\n\n/**\n * Navigates back in the Teams client. See registerBackButtonHandler for more information on when\n * it's appropriate to use this method.\n */\nexport function navigateBack(onComplete?: (status: boolean, reason?: string) => void): void {\n  ensureInitialized();\n\n  const errorMessage = 'Back navigation is not supported in the current client or context.';\n  sendMessageToParent('navigateBack', [], onComplete ? onComplete : getGenericOnCompleteHandler(errorMessage));\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { TaskInfo } from './interfaces';\nimport { FrameContexts } from './constants';\nimport { IAppWindow, ChildAppWindow } from './appWindow';\nimport { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\n\n/**\n * Namespace to interact with the task module-specific part of the SDK.\n * This object is usable only on the content frame.\n */\nexport namespace tasks {\n  /**\n   * Allows an app to open the task module.\n   * @param taskInfo An object containing the parameters of the task module\n   * @param submitHandler Handler to call when the task module is completed\n   */\n  export function startTask(taskInfo: TaskInfo, submitHandler?: (err: string, result: string) => void): IAppWindow {\n    ensureInitialized(FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n\n    sendMessageToParent('tasks.startTask', [taskInfo], submitHandler);\n    return new ChildAppWindow();\n  }\n\n  /**\n   * Update height/width task info properties.\n   * @param taskInfo An object containing width and height properties\n   */\n  export function updateTask(taskInfo: TaskInfo): void {\n    ensureInitialized(FrameContexts.content, FrameContexts.sidePanel, FrameContexts.task, FrameContexts.meetingStage);\n    const { width, height, ...extra } = taskInfo;\n\n    if (!Object.keys(extra).length) {\n      sendMessageToParent('tasks.updateTask', [taskInfo]);\n    } else {\n      throw new Error('updateTask requires a taskInfo argument containing only width and height');\n    }\n  }\n\n  /**\n   * Submit the task module.\n   * @param result Contains the result to be sent to the bot or the app. Typically a JSON object or a serialized version of it\n   * @param appIds Helps to validate that the call originates from the same appId as the one that invoked the task module\n   */\n  export function submitTask(result?: string | object, appIds?: string | string[]): void {\n    ensureInitialized(FrameContexts.content, FrameContexts.sidePanel, FrameContexts.task, FrameContexts.meetingStage);\n\n    // Send tasks.completeTask instead of tasks.submitTask message for backward compatibility with Mobile clients\n    sendMessageToParent('tasks.completeTask', [result, Array.isArray(appIds) ? appIds : [appIds]]);\n  }\n}\n","import { SdkError, ErrorCode } from './interfaces';\nimport { ensureInitialized, isAPISupportedByPlatform } from '../internal/internalAPIs';\nimport { FrameContexts } from './constants';\nimport { sendMessageToParent } from '../internal/communication';\nimport { locationAPIsRequiredVersion } from '../internal/constants';\n\nexport namespace location {\n  export interface LocationProps {\n    /**\n    whether user can alter location or not\n    if false, user will be shown current location \n    and wouldn't be allowed to alter it\n    */\n    allowChooseLocation: boolean;\n    /**\n    whether selected location should be shown to user on map or not.\n    If allowChooseLocation is true, this parameter will be ignored by platform.\n    If allowChooseLocation is false, and this parameter is not provided, default \n    value will be false.\n    */\n    showMap?: boolean;\n  }\n\n  export interface Location {\n    /**\n    Latitude of the location\n    */\n    latitude: number;\n    /**\n    Longitude of the location\n    */\n    longitude: number;\n    /**\n    Accuracy of the coordinates captured\n    */\n    accuracy?: number;\n    /**\n    Time stamp when the location was captured\n    */\n    timestamp?: number;\n  }\n\n  /**\n   * Fetches current user coordinates or allows user to choose location on map\n   * @param callback Callback to invoke when current user location is fetched\n   */\n  export function getLocation(props: LocationProps, callback: (error: SdkError, location: Location) => void): void {\n    if (!callback) {\n      throw new Error('[location.getLocation] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\n\n    if (!isAPISupportedByPlatform(locationAPIsRequiredVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, undefined);\n      return;\n    }\n    if (!props) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, undefined);\n      return;\n    }\n    sendMessageToParent('location.getLocation', [props], callback);\n  }\n\n  /**\n   * Shows the location on map corresponding to the given coordinates\n   * @param location {@link Location} which needs to be shown on map\n   * @param callback Callback to invoke when the location is opened on map\n   */\n  export function showLocation(location: Location, callback: (error: SdkError, status: boolean) => void): void {\n    if (!callback) {\n      throw new Error('[location.showLocation] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\n\n    if (!isAPISupportedByPlatform(locationAPIsRequiredVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, undefined);\n      return;\n    }\n    if (!location) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, undefined);\n      return;\n    }\n    sendMessageToParent('location.showLocation', [location], callback);\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { SdkError } from './interfaces';\nimport { FrameContexts } from './constants';\n\nexport namespace meeting {\n  /**\n   * @private\n   * Hide from docs\n   * Data structure to represent a meeting details\n   */\n  export interface IMeetingDetailsResponse {\n    /**\n     * details object\n     */\n    details: IMeetingDetails | ICallDetails;\n    /**\n     * conversation object\n     */\n    conversation: IConversation;\n    /**\n     * organizer object\n     */\n    organizer: IOrganizer;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Base data structure to represent a meeting or call detail\n   */\n  export interface IMeetingOrCallDetailsBase<T> {\n    /**\n     * Scheduled start time of the meeting or start time of the call\n     */\n    scheduledStartTime: string;\n\n    /**\n     * url to join the current meeting or call\n     */\n    joinUrl?: string;\n\n    /**\n     * type of the meeting or call\n     */\n    type?: T;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Data structure to represent call details\n   */\n  export type ICallDetails = IMeetingOrCallDetailsBase<CallType>;\n\n  /**\n   * @private\n   * Hide from docs\n   * Data structure to represent meeting details.\n   */\n  export interface IMeetingDetails extends IMeetingOrCallDetailsBase<MeetingType> {\n    /**\n     * Scheduled end time of the meeting\n     */\n    scheduledEndTime: string;\n    /**\n     * meeting title name of the meeting\n     */\n    title?: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Data structure to represent a conversation object.\n   */\n  export interface IConversation {\n    /**\n     * conversation id of the meeting\n     */\n    id: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Data structure to represent an organizer object.\n   */\n  export interface IOrganizer {\n    /**\n     * organizer id of the meeting\n     */\n    id?: string;\n    /**\n     * tenant id of the meeting\n     */\n    tenantId?: string;\n  }\n\n  export interface LiveStreamState {\n    /**\n     * indicates whether meeting is streaming\n     */\n    isStreaming: boolean;\n\n    /**\n     * error object in case there is a failure\n     */\n    error?: {\n      /** error code from the streaming service, e.g. IngestionFailure */\n      code: string;\n      /** detailed error message string */\n      message?: string;\n    };\n  }\n\n  export interface IAppContentStageSharingCapabilities {\n    /**\n     * indicates whether app has permission to share contents to meeting stage\n     */\n    doesAppHaveSharePermission: boolean;\n  }\n\n  export interface IAppContentStageSharingState {\n    /**\n     * indicates whether app is currently being shared to stage\n     */\n    isAppSharing: boolean;\n  }\n  export interface ISpeakingState {\n    /**\n     * Indicates whether one or more participants in a meeting are speaking, or\n     * if no participants are speaking\n     */\n    isSpeakingDetected: boolean;\n  }\n\n  export enum MeetingType {\n    Unknown = 'Unknown',\n    Adhoc = 'Adhoc',\n    Scheduled = 'Scheduled',\n    Recurring = 'Recurring',\n    Broadcast = 'Broadcast',\n    MeetNow = 'MeetNow',\n  }\n\n  export enum CallType {\n    OneOnOneCall = 'oneOnOneCall',\n    GroupCall = 'groupCall',\n  }\n\n  /**\n   * Allows an app to get the incoming audio speaker setting for the meeting user\n   * @param callback Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError, incase of an error, or null when fetch is successful\n   * result can either contain the true/false value, incase of a successful fetch or null when the fetching fails\n   * result: True means incoming audio is muted and false means incoming audio is unmuted\n   */\n  export function getIncomingClientAudioState(\n    callback: (error: SdkError | null, result: boolean | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get incoming client audio state] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('getIncomingClientAudioState', callback);\n  }\n\n  /**\n   * Allows an app to toggle the incoming audio speaker setting for the meeting user from mute to unmute or vice-versa\n   * @param callback Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError, incase of an error, or null when toggle is successful\n   * result can either contain the true/false value, incase of a successful toggle or null when the toggling fails\n   * result: True means incoming audio is muted and false means incoming audio is unmuted\n   */\n  export function toggleIncomingClientAudio(callback: (error: SdkError | null, result: boolean | null) => void): void {\n    if (!callback) {\n      throw new Error('[toggle incoming client audio] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('toggleIncomingClientAudio', callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Allows an app to get the meeting details for the meeting\n   * @param callback Callback contains 2 parameters, error and meetingDetailsResponse.\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\n   * result can either contain a IMeetingDetailsResponse value, incase of a successful get or null when the get fails\n   */\n  export function getMeetingDetails(\n    callback: (error: SdkError | null, meetingDetails: IMeetingDetailsResponse | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get meeting details] Callback cannot be null');\n    }\n    ensureInitialized(\n      FrameContexts.sidePanel,\n      FrameContexts.meetingStage,\n      FrameContexts.settings,\n      FrameContexts.content,\n    );\n    sendMessageToParent('meeting.getMeetingDetails', callback);\n  }\n\n  /**\n   * @private\n   * Allows an app to get the authentication token for the anonymous or guest user in the meeting\n   * @param callback Callback contains 2 parameters, error and authenticationTokenOfAnonymousUser.\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\n   * authenticationTokenOfAnonymousUser can either contain a string value, incase of a successful get or null when the get fails\n   */\n  export function getAuthenticationTokenForAnonymousUser(\n    callback: (error: SdkError | null, authenticationTokenOfAnonymousUser: string | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get Authentication Token For AnonymousUser] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('meeting.getAuthenticationTokenForAnonymousUser', callback);\n  }\n\n  /**\n   * Allows an app to get the state of the live stream in the current meeting\n   * @param callback Callback contains 2 parameters: error and liveStreamState.\n   * error can either contain an error of type SdkError, in case of an error, or null when get is successful\n   * liveStreamState can either contain a LiveStreamState value, or null when operation fails\n   */\n  export function getLiveStreamState(\n    callback: (error: SdkError | null, liveStreamState: LiveStreamState | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get live stream state] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('meeting.getLiveStreamState', callback);\n  }\n\n  /**\n   * Allows an app to request the live streaming be started at the given streaming url\n   * @param streamUrl the url to the stream resource\n   * @param streamKey the key to the stream resource\n   * @param callback Callback contains error parameter which can be of type SdkError in case of an error, or null when operation is successful\n   * Use getLiveStreamState or registerLiveStreamChangedHandler to get updates on the live stream state\n   */\n  export function requestStartLiveStreaming(\n    callback: (error: SdkError | null) => void,\n    streamUrl: string,\n    streamKey?: string,\n  ): void {\n    if (!callback) {\n      throw new Error('[request start live streaming] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('meeting.requestStartLiveStreaming', [streamUrl, streamKey], callback);\n  }\n\n  /**\n   * Allows an app to request the live streaming be stopped at the given streaming url\n   * @param callback Callback contains error parameter which can be of type SdkError in case of an error, or null when operation is successful\n   * Use getLiveStreamState or registerLiveStreamChangedHandler to get updates on the live stream state\n   */\n  export function requestStopLiveStreaming(callback: (error: SdkError | null) => void): void {\n    if (!callback) {\n      throw new Error('[request stop live streaming] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('meeting.requestStopLiveStreaming', callback);\n  }\n\n  /**\n   * Registers a handler for changes to the live stream.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the live stream state changes\n   */\n  export function registerLiveStreamChangedHandler(handler: (liveStreamState: LiveStreamState) => void): void {\n    if (!handler) {\n      throw new Error('[register live stream changed handler] Handler cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('meeting.liveStreamChanged', handler);\n  }\n\n  /**\n   * Allows an app to share contents in the meeting\n   * @param callback Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError, incase of an error, or null when share is successful\n   * result can either contain a true value, incase of a successful share or null when the share fails\n   * @param appContentUrl is the input URL which needs to be shared on to the stage\n   */\n  export function shareAppContentToStage(\n    callback: (error: SdkError | null, result: boolean | null) => void,\n    appContentUrl: string,\n  ): void {\n    if (!callback) {\n      throw new Error('[share app content to stage] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('meeting.shareAppContentToStage', [appContentUrl], callback);\n  }\n\n  /**\n   * Provides information related app's in-meeting sharing capabilities\n   * @param callback Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError (error indication), or null (non-error indication)\n   * appContentStageSharingCapabilities can either contain an IAppContentStageSharingCapabilities object\n   * (indication of successful retrieval), or null (indication of failed retrieval)\n   */\n  export function getAppContentStageSharingCapabilities(\n    callback: (\n      error: SdkError | null,\n      appContentStageSharingCapabilities: IAppContentStageSharingCapabilities | null,\n    ) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get app content stage sharing capabilities] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('meeting.getAppContentStageSharingCapabilities', callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Terminates current stage sharing session in meeting\n   * @param callback Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError (error indication), or null (non-error indication)\n   * result can either contain a true boolean value (successful termination), or null (unsuccessful fetch)\n   */\n  export function stopSharingAppContentToStage(\n    callback: (error: SdkError | null, result: boolean | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[stop sharing app content to stage] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('meeting.stopSharingAppContentToStage', callback);\n  }\n\n  /**\n   * Provides information related to current stage sharing state for app\n   * @param callback Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError (error indication), or null (non-error indication)\n   * appContentStageSharingState can either contain an IAppContentStageSharingState object\n   * (indication of successful retrieval), or null (indication of failed retrieval)\n   */\n  export function getAppContentStageSharingState(\n    callback: (error: SdkError | null, appContentStageSharingState: IAppContentStageSharingState | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get app content stage sharing state] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent('meeting.getAppContentStageSharingState', callback);\n  }\n\n  /**\n   * Registers a handler for changes to paticipant speaking states. If any participant is speaking, isSpeakingDetected\n   * will be true. If no participants are speaking, isSpeakingDetected will be false. Only one handler can be registered\n   * at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the speaking state of any participant changes (start/stop speaking).\n   */\n  export function registerSpeakingStateChangeHandler(handler: (speakingState: ISpeakingState) => void): void {\n    if (!handler) {\n      throw new Error('[registerSpeakingStateChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel, FrameContexts.meetingStage);\n    registerHandler('meeting.speakingStateChanged', handler);\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { SdkError } from './interfaces';\nimport { FrameContexts } from './constants';\n\nexport namespace monetization {\n  /**\n   * @private\n   * Hide from docs\n   * Data structure to represent a subscription plan.\n   */\n  export interface PlanInfo {\n    /**\n     * plan id\n     */\n    planId: string;\n    /**\n     * term of the plan\n     */\n    term: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Open dialog to start user's purchase experience\n   * @param callback Callback contains 1 parameters, error.\n   * @param planInfo optional parameter. It contains info of the subscription plan pushed to users.\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\n   */\n  export function openPurchaseExperience(callback: (error: SdkError | null) => void, planInfo?: PlanInfo): void {\n    if (!callback) {\n      throw new Error('[open purchase experience] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content);\n    sendMessageToParent('monetization.openPurchaseExperience', [planInfo], callback);\n  }\n}\n","import { ensureInitialized, isAPISupportedByPlatform } from '../internal/internalAPIs';\nimport { FrameContexts } from './constants';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { validatePeoplePickerInput } from '../internal/mediaUtil';\nimport { sendMessageToParent } from '../internal/communication';\nimport { peoplePickerRequiredVersion } from '../internal/constants';\n\nexport namespace people {\n  /**\n   * Launches a people picker and allows the user to select one or more people from the list\n   * If the app is added to personal app scope the people picker launched is org wide and if the app is added to a chat/channel, people picker launched is also limited to the members of chat/channel\n   * @param callback Returns list of JSON object of type PeoplePickerResult which consists of AAD IDs, display names and emails of the selected users\n   * @param peoplePickerInputs Input parameters to launch customized people picker\n   */\n  export function selectPeople(\n    callback: (error: SdkError, people: PeoplePickerResult[]) => void,\n    peoplePickerInputs?: PeoplePickerInputs,\n  ): void {\n    if (!callback) {\n      throw new Error('[people picker] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.content, FrameContexts.task, FrameContexts.settings);\n\n    if (!isAPISupportedByPlatform(peoplePickerRequiredVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, undefined);\n      return;\n    }\n\n    if (!validatePeoplePickerInput(peoplePickerInputs)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, null);\n      return;\n    }\n\n    sendMessageToParent('people.selectPeople', [peoplePickerInputs], callback);\n  }\n\n  /**\n   * Input parameter supplied to the People Picker API\n   */\n  export interface PeoplePickerInputs {\n    /**\n     * Optional; Set title for the people picker\n     * Default value is \"Select people\" for multiselect and \"Select a person\" for single select\n     */\n    title?: string;\n\n    /**\n     * Optional; AAD ids of the users to be pre-populated in the search box of people picker control\n     * If single select is enabled this value, only the first user in the list will be pre-populated\n     * Default value is null\n     */\n    setSelected?: string[];\n\n    /**\n     * Optional; launches the people picker in org wide scope even if the app is added to a chat or channel\n     * Default value is false\n     */\n    openOrgWideSearchInChatOrChannel?: boolean;\n\n    /**\n     * Optional; launches the people picker for which only 1 person can be selected\n     * Default value is false\n     */\n    singleSelect?: boolean;\n  }\n\n  /**\n   * Output user object of people picker API\n   */\n  export interface PeoplePickerResult {\n    /**\n     * user object Id (also known as aad id) of the selected user\n     */\n    objectId: string;\n\n    /**\n     * Optional; display name of the selected user\n     */\n    displayName?: string;\n\n    /**\n     * Optional; email of the selected user\n     */\n    email?: string;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { FrameContexts } from './constants';\nimport { registerHandler } from '../internal/handlers';\n/**\n * Namespace to video extensibility of the SDK.\n *\n */\nexport namespace video {\n  /**\n   * Represents a video frame.\n   */\n  export interface VideoFrame {\n    /**\n     * Video frame width.\n     */\n    width: number;\n    /**\n     * Video frame height.\n     */\n    height: number;\n    /**\n     * Video frame buffer\n     */\n    data: Uint8ClampedArray;\n    /**\n     * NV12 luma stride, valid only when video frame format is NV12\n     */\n    lumaStride?: number;\n    /**\n     * NV12 chroma stride, valid only when video frame format is NV12\n     */\n    chromaStride?: number;\n    /**\n     * RGB stride, valid only when video frame format is RGB\n     */\n    stride?: number;\n  }\n  /**\n   * Video frame format enum, currently only support NV12\n   */\n  export enum VideoFrameFormat {\n    NV12,\n  }\n  /**\n   * Video frame configuration supplied to Teams to customize the generated video frame parameters, like format.\n   */\n  export interface VideoFrameConfig {\n    /**\n     * video format\n     */\n    format: VideoFrameFormat;\n  }\n\n  /**\n   *  Video effect change type enum\n   */\n  export enum EffectChangeType {\n    /**\n     * current video effect changed.\n     */\n    EffectChanged,\n    /**\n     * disable the video effect\n     */\n    EffectDisabled,\n  }\n\n  /**\n   *  Video frame call back function definition\n   */\n  type VideoFrameCallback = (\n    frame: VideoFrame,\n    notifyVideoFrameProcessed: () => void,\n    notifyError: (errorMessage: string) => void,\n  ) => void;\n\n  /**\n   *  Video effect change call back function definition\n   */\n  type VideoEffectCallBack = (effectId: string | undefined) => void;\n\n  /**\n   * register to read the video frames in Permissions section.\n   */\n  export function registerForVideoFrame(frameCallback: VideoFrameCallback, config: VideoFrameConfig): void {\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('video.newVideoFrame', (videoFrame: VideoFrame) => {\n      if (videoFrame !== undefined) {\n        frameCallback(videoFrame, notifyVideoFrameProcessed, notifyError);\n      }\n    });\n    sendMessageToParent('video.registerForVideoFrame', [config]);\n  }\n\n  /**\n   * video extension should call this to notify Teams Client current selected effect parameter changed.\n   * If it's pre-meeting, Teams client will call videoEffectCallback immediately then use the videoEffect.\n   * in-meeting scenario, we will call videoEffectCallback when apply button clicked.\n   * @param effectChangeType the effect change type.\n   * @param effectId Newly selected effect id.\n   */\n  export function notifySelectedVideoEffectChanged(\n    effectChangeType: EffectChangeType,\n    effectId: string | undefined,\n  ): void {\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('video.videoEffectChanged', [effectChangeType, effectId]);\n  }\n\n  /**\n   * Register the video effect callback, Teams client uses this to notify the video extension the new video effect will by applied.\n   */\n  export function registerForVideoEffect(callback: VideoEffectCallBack): void {\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('video.effectParameterChange', callback);\n  }\n\n  /**\n   * sending notification to Teams client finished the video frame processing, now Teams client can render this video frame\n   * or pass the video frame to next one in video pipeline.\n   */\n  function notifyVideoFrameProcessed(): void {\n    sendMessageToParent('video.videoFrameProcessed');\n  }\n\n  /**\n   * sending error notification to Teams client.\n   */\n  function notifyError(errorMessage: string): void {\n    sendMessageToParent('video.notifyError', [errorMessage]);\n  }\n} //end of video namespace\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { sendMessageToParent } from '../internal/communication';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { FrameContexts } from './constants';\n\nexport namespace sharing {\n  export const SharingAPIMessages = {\n    shareWebContent: 'sharing.shareWebContent',\n  };\n\n  // More types can be added as we expand share capability\n  type ContentType = 'URL';\n\n  interface IBaseSharedContent {\n    type: ContentType;\n  }\n\n  // More types can be added as we expand share capability\n  export type IShareRequestContentType = IURLContent;\n\n  export interface IShareRequest<T> {\n    content: T[];\n  }\n\n  export interface IURLContent extends IBaseSharedContent {\n    type: 'URL';\n\n    /**\n     * Required URL\n     */\n    url: string;\n\n    /**\n     * Default initial message text\n     */\n    message?: string;\n\n    /**\n     * Show URL preview, defaults to true\n     */\n    preview?: boolean;\n  }\n\n  /**\n   * Opens a share dialog for web content\n   * @param shareWebContentRequest web content info\n   * @param callback optional callback\n   */\n  export function shareWebContent(\n    shareWebContentRequest: IShareRequest<IShareRequestContentType>,\n    callback?: (err?: SdkError) => void,\n  ): void {\n    if (!validateNonEmptyContent(shareWebContentRequest, callback)) {\n      return;\n    }\n\n    if (!validateTypeConsistency(shareWebContentRequest, callback)) {\n      return;\n    }\n\n    if (!validateContentForSupportedTypes(shareWebContentRequest, callback)) {\n      return;\n    }\n\n    ensureInitialized(\n      FrameContexts.content,\n      FrameContexts.sidePanel,\n      FrameContexts.task,\n      FrameContexts.stage,\n      FrameContexts.meetingStage,\n    );\n\n    sendMessageToParent(SharingAPIMessages.shareWebContent, [shareWebContentRequest], callback);\n  }\n\n  // Error checks\n  function validateNonEmptyContent(\n    shareRequest: IShareRequest<IShareRequestContentType>,\n    callback?: (err?: SdkError) => void,\n  ): boolean {\n    if (!(shareRequest && shareRequest.content && shareRequest.content.length)) {\n      if (callback) {\n        callback({\n          errorCode: ErrorCode.INVALID_ARGUMENTS,\n          message: 'Shared content is missing',\n        });\n      }\n      return false;\n    }\n    return true;\n  }\n\n  function validateTypeConsistency(\n    shareRequest: IShareRequest<IShareRequestContentType>,\n    callback?: (err?: SdkError) => void,\n  ): boolean {\n    if (shareRequest.content.some(item => !item.type)) {\n      if (callback) {\n        callback({\n          errorCode: ErrorCode.INVALID_ARGUMENTS,\n          message: 'Shared content type cannot be undefined',\n        });\n      }\n      return false;\n    }\n\n    if (shareRequest.content.some(item => item.type !== shareRequest.content[0].type)) {\n      if (callback) {\n        callback({\n          errorCode: ErrorCode.INVALID_ARGUMENTS,\n          message: 'Shared content must be of the same type',\n        });\n      }\n      return false;\n    }\n    return true;\n  }\n\n  function validateContentForSupportedTypes(\n    shareRequest: IShareRequest<IShareRequestContentType>,\n    callback?: (err?: SdkError) => void,\n  ): boolean {\n    if (shareRequest.content[0].type === 'URL') {\n      if (shareRequest.content.some(item => !item.url)) {\n        if (callback) {\n          callback({\n            errorCode: ErrorCode.INVALID_ARGUMENTS,\n            message: 'URLs are required for URL content types',\n          });\n        }\n        return false;\n      }\n    } else {\n      if (callback) {\n        callback({\n          errorCode: ErrorCode.INVALID_ARGUMENTS,\n          message: 'Content type is unsupported',\n        });\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { SdkError } from '../public';\nimport { FrameContexts } from './constants';\n\n/**\n * Namespace to interact with the stage view specific part of the SDK.\n */\nexport namespace stageView {\n  /**\n   * Parameters to open a stage view.\n   */\n  export interface StageViewParams {\n    /**\n     * The application ID of the Teams application to be opened.\n     */\n    appId: string;\n\n    /**\n     * The URL of the content to display.\n     */\n    contentUrl: string;\n\n    /**\n     * The chat or channel ID.\n     */\n    threadId: string;\n\n    /**\n     * The title to give the stage view.\n     */\n    title: string;\n\n    /**\n     * The Teams app website URL.\n     */\n    websiteUrl?: string;\n\n    /**\n     * The entity ID of the Teams app content being opened.\n     */\n    entityId?: string;\n  }\n\n  /**\n   * @private\n   * Feature is under development\n   *\n   * Opens a stage view to display a Teams app\n   * @param stageViewParams The parameters to pass into the stage view.\n   * @param callback Callback that will be triggered once the stage view is closed.\n   *                 The callback takes as an argument an SdkError in case something happened (i.e.\n   *                 no permissions to execute the API)\n   */\n  export function open(stageViewParams: StageViewParams, callback?: (sdkError?: SdkError) => void): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!stageViewParams) {\n      throw new Error('[stageView.open] Stage view params cannot be null');\n    }\n\n    sendMessageToParent('stageView.open', [stageViewParams], callback);\n  }\n}\n","import { FileOpenPreference, TeamInformation } from '../public/interfaces';\n\n/**\n * @private\n * Hide from docs\n * --------\n * Information about all members in a chat\n */\nexport interface ChatMembersInformation {\n  members: ThreadMember[];\n}\n\n/**\n * @private\n * Hide from docs\n * --------\n * Information about a chat member\n */\nexport interface ThreadMember {\n  /**\n   * The member's user principal name in the current tenant.\n   */\n  upn: string;\n}\n\nexport enum NotificationTypes {\n  fileDownloadStart = 'fileDownloadStart',\n  fileDownloadComplete = 'fileDownloadComplete',\n}\n\nexport interface ShowNotificationParameters {\n  message: string;\n  notificationType: NotificationTypes;\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n */\nexport enum ViewerActionTypes {\n  view = 'view',\n  edit = 'edit',\n  editNew = 'editNew',\n}\n\n/**\n * * @private\n * Hide from docs.\n * ------\n * User setting changes that can be subscribed to,\n */\nexport enum UserSettingTypes {\n  /**\n   * Use this key to subscribe to changes in user's file open preference\n   */\n  fileOpenPreference = 'fileOpenPreference',\n  /**\n   * Use this key to subscribe to theme changes\n   */\n  theme = 'theme',\n}\n\n/**\n * @private\n * Hide from docs.\n * ------\n */\nexport interface FilePreviewParameters {\n  /**\n   * The developer-defined unique ID for the file.\n   */\n  entityId: string;\n\n  /**\n   * The display name of the file.\n   */\n  title: string;\n\n  /**\n   * An optional description of the file.\n   */\n  description?: string;\n\n  /**\n   * The file extension; e.g. pptx, docx, etc.\n   */\n  type: string;\n\n  /**\n   * A url to the source of the file, used to open the content in the user's default browser\n   */\n  objectUrl: string;\n\n  /**\n   * Optional; an alternate self-authenticating url used to preview the file in Mobile clients and offer it for download by the user\n   */\n  downloadUrl?: string;\n\n  /**\n   * Optional; an alternate url optimized for previewing the file in Teams web and desktop clients\n   */\n  webPreviewUrl?: string;\n\n  /**\n   * Optional; an alternate url that allows editing of the file in Teams web and desktop clients\n   */\n  webEditUrl?: string;\n\n  /**\n   * Optional; the base url of the site where the file is hosted\n   */\n  baseUrl?: string;\n\n  /**\n   * Deprecated; prefer using viewerAction instead\n   * Optional; indicates whether the file should be opened in edit mode\n   */\n  editFile?: boolean;\n\n  /**\n   * Optional; the developer-defined unique ID for the sub-entity to return to when the file stage closes.\n   * This field should be used to restore to a specific state within an entity, such as scrolling to or activating a specific piece of content.\n   */\n  subEntityId?: string;\n\n  /**\n   * Optional; indicates the mode in which file should be opened. Takes precedence over edit mode.\n   */\n  viewerAction?: ViewerActionTypes;\n\n  /**\n   * Optional; indicates how user prefers to open the file\n   */\n  fileOpenPreference?: FileOpenPreference;\n\n  /**\n   * Optional; id required to enable conversation button in files. Will be channel id in case file is shared in a channel or the chat id in p2p chat case.\n   */\n  conversationId?: string;\n}\n\n/**\n * @private\n * Hide from docs\n * --------\n * Query parameters used when fetching team information\n */\nexport interface TeamInstanceParameters {\n  /**\n   * Flag allowing to select favorite teams only\n   */\n  favoriteTeamsOnly?: boolean;\n}\n\n/**\n * @private\n * Hide from docs\n * --------\n * Information on userJoined Teams\n */\nexport interface UserJoinedTeamsInformation {\n  /**\n   * List of team information\n   */\n  userJoinedTeams: TeamInformation[];\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { FrameContexts } from '../public/constants';\nimport { OpenConversationRequest } from '../public/interfaces';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\n\n/**\n * Namespace to interact with the conversational subEntities inside the tab\n */\nexport namespace conversations {\n  /**\n   * @private\n   * Hide from docs\n   * --------------\n   * Allows the user to start or continue a conversation with each subentity inside the tab\n   */\n  export function openConversation(openConversationRequest: OpenConversationRequest): void {\n    ensureInitialized(FrameContexts.content);\n    sendMessageToParent(\n      'conversations.openConversation',\n      [\n        {\n          title: openConversationRequest.title,\n          subEntityId: openConversationRequest.subEntityId,\n          conversationId: openConversationRequest.conversationId,\n          channelId: openConversationRequest.channelId,\n          entityId: openConversationRequest.entityId,\n        },\n      ],\n      (status: boolean, reason: string) => {\n        if (!status) {\n          throw new Error(reason);\n        }\n      },\n    );\n    if (openConversationRequest.onStartConversation) {\n      registerHandler(\n        'startConversation',\n        (subEntityId: string, conversationId: string, channelId: string, entityId: string) =>\n          openConversationRequest.onStartConversation({\n            subEntityId,\n            conversationId,\n            channelId,\n            entityId,\n          }),\n      );\n    }\n    if (openConversationRequest.onCloseConversation) {\n      registerHandler(\n        'closeConversation',\n        (subEntityId: string, conversationId?: string, channelId?: string, entityId?: string) =>\n          openConversationRequest.onCloseConversation({\n            subEntityId,\n            conversationId,\n            channelId,\n            entityId,\n          }),\n      );\n    }\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * --------------\n   * Allows the user to close the conversation in the right pane\n   */\n  export function closeConversation(): void {\n    ensureInitialized(FrameContexts.content);\n    sendMessageToParent('conversations.closeConversation');\n    removeHandler('startConversation');\n    removeHandler('closeConversation');\n  }\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { SdkError } from '../public/interfaces';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\n\nexport namespace meetingRoom {\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Data structure to represent a meeting room.\n   */\n  export interface MeetingRoomInfo {\n    /**\n     * Endpoint id of the meeting room.\n     */\n    endpointId: string;\n    /**\n     * Device name of the meeting room.\n     */\n    deviceName: string;\n    /**\n     * Client type of the meeting room.\n     */\n    clientType: string;\n    /**\n     * Client version of the meeting room.\n     */\n    clientVersion: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Enum used to indicate meeting room capabilities.\n   */\n  export enum Capability {\n    /**\n     * Media control capability: toggle mute.\n     */\n    toggleMute = 'toggleMute',\n    /**\n     * Media control capability: toggle camera.\n     */\n    toggleCamera = 'toggleCamera',\n    /**\n     * Media control capability: toggle captions.\n     */\n    toggleCaptions = 'toggleCaptions',\n    /**\n     * Media control capability: volume ajustion.\n     */\n    volume = 'volume',\n    /**\n     * Stage layout control capability: show gallery mode.\n     */\n    showVideoGallery = 'showVideoGallery',\n    /**\n     * Stage layout control capability: show content mode.\n     */\n    showContent = 'showContent',\n    /**\n     * Stage layout control capability: show content + gallery mode.\n     */\n    showVideoGalleryAndContent = 'showVideoGalleryAndContent',\n    /**\n     * Stage layout control capability: show large gallery mode.\n     */\n    showLargeGallery = 'showLargeGallery',\n    /**\n     * Stage layout control capability: show together mode.\n     */\n    showTogether = 'showTogether',\n    /**\n     * Meeting control capability: leave meeting.\n     */\n    leaveMeeting = 'leaveMeeting',\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Data structure to represent capabilities of a meeting room.\n   */\n  export interface MeetingRoomCapability {\n    /**\n     * Media control capabilities, value can be \"toggleMute\", \"toggleCamera\", \"toggleCaptions\", \"volume\".\n     */\n    mediaControls: string[];\n    /**\n     * Main stage layout control capabilities, value can be \"showVideoGallery\", \"showContent\", \"showVideoGalleryAndContent\", \"showLargeGallery\", \"showTogether\".\n     */\n    stageLayoutControls: string[];\n    /**\n     * Meeting control capabilities, value can be \"leaveMeeting\".\n     */\n    meetingControls: string[];\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Data structure to represent states of a meeting room.\n   */\n  export interface MeetingRoomState {\n    /**\n     * Current mute state, true: mute, false: unmute.\n     */\n    toggleMute: boolean;\n    /**\n     * Current camera state, true: camera on, false: camera off.\n     */\n    toggleCamera: boolean;\n    /**\n     * Current captions state, true: captions on, false: captions off.\n     */\n    toggleCaptions: boolean;\n    /**\n     * Current main stage layout state, value can be one of \"Gallery\", \"Content + gallery\", \"Content\", \"Large gallery\" and \"Together mode\".\n     */\n    stageLayout: string;\n    /**\n     * Current leaveMeeting state, true: leave, false: no-op.\n     */\n    leaveMeeting: boolean;\n  }\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Fetch the meeting room info that paired with current client.\n   * @param callback Callback to invoke when the meeting room info is fetched.\n   */\n  export function getPairedMeetingRoomInfo(\n    callback: (sdkError: SdkError, meetingRoomInfo: MeetingRoomInfo) => void,\n  ): void {\n    ensureInitialized();\n    sendMessageToParent('meetingRoom.getPairedMeetingRoomInfo', callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Send a command to paired meeting room.\n   * @param commandName The command name.\n   * @param callback Callback to invoke when the command response returns.\n   */\n  export function sendCommandToPairedMeetingRoom(commandName: string, callback: (sdkError: SdkError) => void): void {\n    if (!commandName || commandName.length == 0) {\n      throw new Error('[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[meetingRoom.sendCommandToPairedMeetingRoom] Callback cannot be null');\n    }\n    ensureInitialized();\n    sendMessageToParent('meetingRoom.sendCommandToPairedMeetingRoom', [commandName], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Registers a handler for meeting room capabilities update.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the capabilities of meeting room update.\n   */\n  export function registerMeetingRoomCapabilitiesUpdateHandler(\n    handler: (capabilities: MeetingRoomCapability) => void,\n  ): void {\n    if (!handler) {\n      throw new Error('[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null');\n    }\n    ensureInitialized();\n    registerHandler('meetingRoom.meetingRoomCapabilitiesUpdate', (capabilities: MeetingRoomCapability) => {\n      ensureInitialized();\n      handler(capabilities);\n    });\n    // handler && Communication.sendMessageToParent('registerHandler', ['meetingRoom.meetingRoomCapabilitiesUpdate']);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   * Registers a handler for meeting room states update.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the states of meeting room update.\n   */\n  export function registerMeetingRoomStatesUpdateHandler(handler: (states: MeetingRoomState) => void): void {\n    if (!handler) {\n      throw new Error('[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null');\n    }\n    ensureInitialized();\n    registerHandler('meetingRoom.meetingRoomStatesUpdate', (states: MeetingRoomState) => {\n      ensureInitialized();\n      handler(states);\n    });\n    // handler && Communication.sendMessageToParent('registerHandler', ['meetingRoom.meetingRoomStatesUpdate']);\n  }\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { SdkError } from '../public/interfaces';\nimport { FrameContexts } from '../public/constants';\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\n\nexport namespace remoteCamera {\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Data structure to represent patricipant details needed to request control of camera.\n   */\n  export interface Participant {\n    /**\n     * Id of participant.\n     */\n    id: string;\n    /**\n     * Display name of participant.\n     */\n    displayName?: string;\n    /**\n     * Active indicates whether the participant's device is actively being controlled.\n     */\n    active?: boolean;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Enum used to indicate possible camera control commands.\n   */\n  export enum ControlCommand {\n    Reset = 'Reset',\n    ZoomIn = 'ZoomIn',\n    ZoomOut = 'ZoomOut',\n    PanLeft = 'PanLeft',\n    PanRight = 'PanRight',\n    TiltUp = 'TiltUp',\n    TiltDown = 'TiltDown',\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Data structure to indicate the current state of the device.\n   */\n  export interface DeviceState {\n    /**\n     * All operation are available to apply.\n     */\n    available: boolean;\n    /**\n     * Either camera doesnt support to get state or It unable to apply command.\n     */\n    error: boolean;\n    /**\n     * Reset max out or already applied. Client Disable Reset.\n     */\n    reset: boolean;\n    /**\n     * ZoomIn maxed out.\n     */\n    zoomIn: boolean;\n    /**\n     * ZoomOut maxed out.\n     */\n    zoomOut: boolean;\n    /**\n     * PanLeft reached max left.\n     */\n    panLeft: boolean;\n    /**\n     * PanRight reached max right.\n     */\n    panRight: boolean;\n    /**\n     * TiltUp reached top.\n     */\n    tiltUp: boolean;\n    /**\n     * TiltDown reached bottom.\n     */\n    tiltDown: boolean;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Enum used to indicate the reason for the error.\n   */\n  export enum ErrorReason {\n    CommandResetError,\n    CommandZoomInError,\n    CommandZoomOutError,\n    CommandPanLeftError,\n    CommandPanRightError,\n    CommandTiltUpError,\n    CommandTiltDownError,\n    SendDataError,\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Data structure to indicate the status of the current session.\n   */\n  export interface SessionStatus {\n    /**\n     * Whether the far-end user is controlling a  device.\n     */\n    inControl: boolean;\n    /**\n     * Reason the  control session was terminated.\n     */\n    terminatedReason?: SessionTerminatedReason;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Enum used to indicate the reason the session was terminated.\n   */\n  export enum SessionTerminatedReason {\n    None,\n    ControlDenied,\n    ControlNoResponse,\n    ControlBusy,\n    AckTimeout,\n    ControlTerminated,\n    ControllerTerminated,\n    DataChannelError,\n    ControllerCancelled,\n    ControlDisabled,\n    ControlTerminatedToAllowOtherController,\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Fetch a list of the participants with controllable-cameras in a meeting.\n   * @param callback Callback contains 2 parameters, error and participants.\n   * error can either contain an error of type SdkError, incase of an error, or null when fetch is successful\n   * participants can either contain an array of Participant objects, incase of a successful fetch or null when it fails\n   * participants: object that contains an array of participants with controllable-cameras\n   */\n  export function getCapableParticipants(\n    callback: (error: SdkError | null, participants: Participant[] | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[remoteCamera.getCapableParticipants] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('remoteCamera.getCapableParticipants', callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Request control of a participant's camera.\n   * @param participant Participant specifies the participant to send the request for camera control.\n   * @param callback Callback contains 2 parameters, error and requestResponse.\n   * error can either contain an error of type SdkError, incase of an error, or null when fetch is successful\n   * requestResponse can either contain the true/false value, incase of a successful request or null when it fails\n   * requestResponse: True means request was accepted and false means request was denied\n   */\n  export function requestControl(\n    participant: Participant,\n    callback: (error: SdkError | null, requestResponse: boolean | null) => void,\n  ): void {\n    if (!participant) {\n      throw new Error('[remoteCamera.requestControl] Participant cannot be null');\n    }\n    if (!callback) {\n      throw new Error('[remoteCamera.requestControl] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('remoteCamera.requestControl', [participant], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Send control command to the participant's camera.\n   * @param ControlCommand ControlCommand specifies the command for controling the camera.\n   * @param callback Callback to invoke when the command response returns.\n   */\n  export function sendControlCommand(ControlCommand: ControlCommand, callback: (error: SdkError | null) => void): void {\n    if (!ControlCommand) {\n      throw new Error('[remoteCamera.sendControlCommand] ControlCommand cannot be null');\n    }\n    if (!callback) {\n      throw new Error('[remoteCamera.sendControlCommand] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('remoteCamera.sendControlCommand', [ControlCommand], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Terminate the remote  session\n   * @param callback Callback to invoke when the command response returns.\n   */\n  export function terminateSession(callback: (error: SdkError | null) => void): void {\n    if (!callback) {\n      throw new Error('[remoteCamera.terminateSession] Callback cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    sendMessageToParent('remoteCamera.terminateSession', callback);\n  }\n\n  /**\n   * Registers a handler for change in participants with controllable-cameras.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the list of participants with controllable-cameras changes.\n   */\n  export function registerOnCapableParticipantsChangeHandler(\n    handler: (participantChange: Participant[]) => void,\n  ): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnCapableParticipantsChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('remoteCamera.capableParticipantsChange', handler);\n  }\n\n  /**\n   * Registers a handler for error.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when there is an error from the camera handler.\n   */\n  export function registerOnErrorHandler(handler: (error: ErrorReason) => void): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnErrorHandler] Handler cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('remoteCamera.handlerError', handler);\n  }\n\n  /**\n   * Registers a handler for device state change.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the controlled device changes state.\n   */\n  export function registerOnDeviceStateChangeHandler(handler: (deviceStateChange: DeviceState) => void): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnDeviceStateChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('remoteCamera.deviceStateChange', handler);\n  }\n\n  /**\n   * Registers a handler for session status change.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * @param handler The handler to invoke when the current session status changes.\n   */\n  export function registerOnSessionStatusChangeHandler(handler: (sessionStatusChange: SessionStatus) => void): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnSessionStatusChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(FrameContexts.sidePanel);\n    registerHandler('remoteCamera.sessionStatusChange', handler);\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { FileOpenPreference, FrameContexts, SdkError } from '../public';\n\n/**\n * Namespace to interact with the files specific part of the SDK.\n *\n * @private\n * Hide from docs\n */\nexport namespace files {\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Cloud storage providers registered with Microsoft Teams\n   */\n  export enum CloudStorageProvider {\n    Dropbox = 'DROPBOX',\n    Box = 'BOX',\n    Sharefile = 'SHAREFILE',\n    GoogleDrive = 'GOOGLEDRIVE',\n    Egnyte = 'EGNYTE',\n    SharePoint = 'SharePoint',\n  }\n  interface IWopiThumbnail {\n    size: number;\n    url: string;\n  }\n\n  interface IWopiService {\n    name: string;\n    description: string;\n    thumbnails: IWopiThumbnail[];\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * External third-party cloud storages providers interface\n   */\n  export interface IExternalProvider extends IWopiService {\n    providerType: CloudStorageProviderType;\n    providerCode: CloudStorageProvider;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Cloud storage provider type enums\n   */\n  export enum CloudStorageProviderType {\n    Sharepoint = 0,\n    WopiIntegration,\n    Google,\n    OneDrive,\n    Recent,\n    Aggregate,\n    FileSystem, // Used for Downloaded files on Desktop\n    Search, // Used by P2P files with OSearch\n    AllFiles, // Used by P2P files with AllFiles API\n    SharedWithMe,\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Cloud storage folder interface\n   */\n  export interface CloudStorageFolder {\n    /**\n     * ID of the cloud storage folder\n     */\n    id: string;\n    /**\n     * Display Name/Title of the cloud storage folder\n     */\n    title: string;\n    /**\n     * ID of the cloud storage folder in the provider\n     */\n    folderId: string;\n    /**\n     * Type of the cloud storage folder provider integration\n     */\n    providerType: CloudStorageProviderType;\n    /**\n     * Code of the supported cloud storage folder provider\n     */\n    providerCode: CloudStorageProvider;\n    /**\n     * Display name of the owner of the cloud storage folder provider\n     */\n    ownerDisplayName: string;\n    /**\n     * Sharepoint specific siteURL of the folder\n     */\n    siteUrl?: string;\n    /**\n     * Sharepoint specific serverRelativeUrl of the folder\n     */\n    serverRelativeUrl?: string;\n    /**\n     * Sharepoint specific libraryType of the folder\n     */\n    libraryType?: string;\n    /**\n     * Sharepoint specific accessType of the folder\n     */\n    accessType?: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Cloud storage item interface\n   */\n  export interface CloudStorageFolderItem {\n    /**\n     * ID of the item in the provider\n     */\n    id: string;\n    /**\n     * Display name/title\n     */\n    title: string;\n    /**\n     * Key to differentiate files and subdirectory\n     */\n    isSubdirectory: boolean;\n    /**\n     * File extension\n     */\n    type: string;\n    /**\n     * Last modifed time of the item\n     */\n    lastModifiedTime: string;\n    /**\n     * Display size of the items in bytes\n     */\n    size: number;\n    /**\n     * URL of the file\n     */\n    objectUrl: string;\n    /**\n     * Temporary access token for the item\n     */\n    accessToken?: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Files entity user interface\n   */\n  export interface IFilesEntityUser {\n    /**\n     * User name.\n     */\n    displayName: string;\n    /**\n     * User email.\n     */\n    email: string;\n\n    /**\n     * User MRI.\n     */\n    mri: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Special Document Library enum\n   */\n  export enum SpecialDocumentLibraryType {\n    ClassMaterials = 'classMaterials',\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Document Library Access enum\n   */\n  export enum DocumentLibraryAccessType {\n    Readonly = 'readonly',\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * SharePoint file interface\n   */\n  export interface ISharePointFile {\n    siteId?: string;\n    siteUrl: string;\n    objectId: string;\n    objectUrl: string;\n    openInWindowFileUrl: string;\n    title: string;\n    isFolder: boolean;\n    serverRelativeUrl: string;\n    lastModifiedByUser: IFilesEntityUser;\n    lastModifiedTime: string;\n    sentByUser: IFilesEntityUser;\n    createdByUser: IFilesEntityUser;\n    createdTime: string;\n    size: number;\n    type: string;\n    spItemUrl?: string;\n    libraryType?: SpecialDocumentLibraryType;\n    accessType?: DocumentLibraryAccessType;\n    etag?: string;\n    remoteItem?: string;\n    listUrl?: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Download status enum\n   */\n  export enum FileDownloadStatus {\n    Downloaded = 'Downloaded',\n    Downloading = 'Downloading',\n    Failed = 'Failed',\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Download Files interface\n   */\n  export interface IFileItem {\n    /**\n     * ID of the file metadata\n     */\n    objectId?: string;\n    /**\n     * Path of the file\n     */\n    path?: string;\n    /**\n     * Size of the file in bytes\n     */\n    sizeInBytes?: number;\n    /**\n     * Download status\n     */\n    status?: FileDownloadStatus;\n    /**\n     * Download timestamp\n     */\n    timestamp: Date;\n    /**\n     * File name\n     */\n    title: string;\n    /**\n     * Type of file i.e. the file extension.\n     */\n    extension: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Gets a list of cloud storage folders added to the channel\n   * @param channelId ID of the channel whose cloud storage folders should be retrieved\n   * @param callback Callback that will be triggered post folders load\n   */\n  export function getCloudStorageFolders(\n    channelId: string,\n    callback: (error: SdkError, folders: CloudStorageFolder[]) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!channelId || channelId.length === 0) {\n      throw new Error('[files.getCloudStorageFolders] channelId name cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.getCloudStorageFolders] Callback cannot be null');\n    }\n\n    sendMessageToParent('files.getCloudStorageFolders', [channelId], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Initiates the add cloud storage folder flow\n   * @param channelId ID of the channel to add cloud storage folder\n   * @param callback Callback that will be triggered post add folder flow is compelete\n   */\n  export function addCloudStorageFolder(\n    channelId: string,\n    callback: (error: SdkError, isFolderAdded: boolean, folders: CloudStorageFolder[]) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!channelId || channelId.length === 0) {\n      throw new Error('[files.addCloudStorageFolder] channelId name cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.addCloudStorageFolder] Callback cannot be null');\n    }\n\n    sendMessageToParent('files.addCloudStorageFolder', [channelId], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Deletes a cloud storage folder from channel\n   * @param channelId ID of the channel where folder is to be deleted\n   * @param folderToDelete cloud storage folder to be deleted\n   * @param callback Callback that will be triggered post delete\n   */\n  export function deleteCloudStorageFolder(\n    channelId: string,\n    folderToDelete: CloudStorageFolder,\n    callback: (error: SdkError, isFolderDeleted: boolean) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!channelId) {\n      throw new Error('[files.deleteCloudStorageFolder] channelId name cannot be null or empty');\n    }\n    if (!folderToDelete) {\n      throw new Error('[files.deleteCloudStorageFolder] folderToDelete cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.deleteCloudStorageFolder] Callback cannot be null');\n    }\n\n    sendMessageToParent('files.deleteCloudStorageFolder', [channelId, folderToDelete], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Fetches the contents of a Cloud storage folder (CloudStorageFolder) / sub directory\n   * @param folder Cloud storage folder (CloudStorageFolder) / sub directory (CloudStorageFolderItem)\n   * @param providerCode Code of the cloud storage folder provider\n   * @param callback Callback that will be triggered post contents are loaded\n   */\n  export function getCloudStorageFolderContents(\n    folder: CloudStorageFolder | CloudStorageFolderItem,\n    providerCode: CloudStorageProvider,\n    callback: (error: SdkError, items: CloudStorageFolderItem[]) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!folder || !providerCode) {\n      throw new Error('[files.getCloudStorageFolderContents] folder/providerCode name cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[files.getCloudStorageFolderContents] Callback cannot be null');\n    }\n\n    if ('isSubdirectory' in folder && !folder.isSubdirectory) {\n      throw new Error('[files.getCloudStorageFolderContents] provided folder is not a subDirectory');\n    }\n\n    sendMessageToParent('files.getCloudStorageFolderContents', [folder, providerCode], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Open a cloud storage file in teams\n   * @param file cloud storage file that should be opened\n   * @param providerCode Code of the cloud storage folder provider\n   * @param fileOpenPreference Whether file should be opened in web/inline\n   */\n  export function openCloudStorageFile(\n    file: CloudStorageFolderItem,\n    providerCode: CloudStorageProvider,\n    fileOpenPreference?: FileOpenPreference.Web | FileOpenPreference.Inline,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!file || !providerCode) {\n      throw new Error('[files.openCloudStorageFile] file/providerCode cannot be null or empty');\n    }\n\n    if (file.isSubdirectory) {\n      throw new Error('[files.openCloudStorageFile] provided file is a subDirectory');\n    }\n\n    sendMessageToParent('files.openCloudStorageFile', [file, providerCode, fileOpenPreference]);\n  }\n\n  /**\n   * @private\n   * Allow 1st party apps to call this function to get the external\n   * third party cloud storage accounts that the tenant supports\n   * @param excludeAddedProviders: return a list of support third party\n   * cloud storages that hasn't been added yet.\n   */\n  export function getExternalProviders(\n    excludeAddedProviders = false,\n    callback: (error: SdkError, providers: IExternalProvider[]) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!callback) {\n      throw new Error('[files.getExternalProviders] Callback cannot be null');\n    }\n\n    sendMessageToParent('files.getExternalProviders', [excludeAddedProviders], callback);\n  }\n\n  /**\n   * @private\n   * Allow 1st party apps to call this function to move files\n   * among SharePoint and third party cloud storages.\n   */\n  export function copyMoveFiles(\n    selectedFiles: CloudStorageFolderItem[] | ISharePointFile[],\n    providerCode: CloudStorageProvider,\n    destinationFolder: CloudStorageFolderItem | ISharePointFile,\n    destinationProviderCode: CloudStorageProvider,\n    isMove = false,\n    callback: (error?: SdkError) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n    if (!selectedFiles || selectedFiles.length === 0) {\n      throw new Error('[files.copyMoveFiles] selectedFiles cannot be null or empty');\n    }\n    if (!providerCode) {\n      throw new Error('[files.copyMoveFiles] providerCode cannot be null or empty');\n    }\n    if (!destinationFolder) {\n      throw new Error('[files.copyMoveFiles] destinationFolder cannot be null or empty');\n    }\n    if (!destinationProviderCode) {\n      throw new Error('[files.copyMoveFiles] destinationProviderCode cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.copyMoveFiles] callback cannot be null');\n    }\n    sendMessageToParent(\n      'files.copyMoveFiles',\n      [selectedFiles, providerCode, destinationFolder, destinationProviderCode, isMove],\n      callback,\n    );\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Gets list of downloads for current user\n   * @param callback Callback that will be triggered post downloads load\n   */\n  export function getFileDownloads(callback: (error?: SdkError, files?: IFileItem[]) => void): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!callback) {\n      throw new Error('[files.getFileDownloads] Callback cannot be null');\n    }\n\n    sendMessageToParent('files.getFileDownloads', [], callback);\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Open download preference folder if fileObjectId value is undefined else open folder containing the file with id fileObjectId\n   * @param fileObjectId: Id of the file whose containing folder should be opened\n   * @param callback Callback that will be triggered post open download folder/path\n   */\n  export function openDownloadFolder(fileObjectId: string = undefined, callback: (error?: SdkError) => void): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!callback) {\n      throw new Error('[files.openDownloadFolder] Callback cannot be null');\n    }\n\n    sendMessageToParent('files.openDownloadFolder', [fileObjectId], callback);\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { FrameContexts, SdkError } from '../public';\n\n/**\n * Namespace to interact with the application entities specific part of the SDK.\n *\n * @private\n * Hide from docs\n */\nexport namespace appEntity {\n  /**\n   * @private\n   * Hide from docs\n   * --------\n   * Information on an app entity\n   */\n  export interface AppEntity {\n    /**\n     * App ID of the application\n     */\n    appId: string;\n\n    /**\n     * URL for the application's icon\n     */\n    appIconUrl: string;\n\n    /**\n     * Content URL for the app entity\n     */\n    contentUrl: string;\n\n    /**\n     * The display name for the app entity\n     */\n    displayName: string;\n\n    /**\n     * Website URL for the app entity. It is meant to be opened by the user in a browser.\n     */\n    websiteUrl: string;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Open the Tab Gallery and retrieve the app entity\n   * @param threadId ID of the thread where the app entity will be created\n   * @param categories A list of app categories that will be displayed in the opened tab gallery\n   * @param subEntityId An object that will be made available to the application being configured\n   *                      through the Teams Context's subEntityId field.\n   * @param callback Callback that will be triggered once the app entity information is available.\n   *                 The callback takes two arguments: an SdkError in case something happened (i.e.\n   *                 no permissions to execute the API) and the app entity configuration, if available\n   */\n  export function selectAppEntity(\n    threadId: string,\n    categories: string[],\n    subEntityId: string,\n    callback: (sdkError?: SdkError, appEntity?: AppEntity) => void,\n  ): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!threadId || threadId.length == 0) {\n      throw new Error('[appEntity.selectAppEntity] threadId name cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[appEntity.selectAppEntity] Callback cannot be null');\n    }\n\n    sendMessageToParent('appEntity.selectAppEntity', [threadId, categories, subEntityId], callback);\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { FrameContexts, SdkError } from '../public';\n\n/**\n * Namespace to interact with the `teams` specific part of the SDK.\n *\n * @private\n * Hide from docs\n */\nexport namespace teams {\n  export enum ChannelType {\n    Regular = 0,\n    Private = 1,\n    Shared = 2,\n  }\n\n  export interface ChannelInfo {\n    siteUrl: string;\n    objectId: string;\n    folderRelativeUrl: string;\n    displayName: string;\n    channelType: ChannelType;\n  }\n\n  /**\n   * @private\n   * Hide from docs\n   *\n   * Get a list of channels belong to a Team\n   * @param groupId a team's objectId\n   */\n  export function getTeamChannels(groupId: string, callback: (error: SdkError, channels: ChannelInfo[]) => void): void {\n    ensureInitialized(FrameContexts.content);\n\n    if (!groupId) {\n      throw new Error('[teams.getTeamChannels] groupId cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[teams.getTeamChannels] Callback cannot be null');\n    }\n\n    sendMessageToParent('teams.getTeamChannels', [groupId], callback);\n  }\n\n  /**\n   * @private\n   * Allow 1st party apps to call this function when they receive migrated errors to inform Teams refresh siteurl\n   * when site admin renames siteurl.\n   * @param threadId ID of the thread where the app entity will be created; if threadId is not\n   * provided, the threadId from route params will be used.\n   */\n  export function refreshSiteUrl(threadId: string, callback: (error: SdkError) => void): void {\n    ensureInitialized();\n\n    if (!threadId) {\n      throw new Error('[teams.refreshSiteUrl] threadId cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[teams.refreshSiteUrl] Callback cannot be null');\n    }\n\n    sendMessageToParent('teams.refreshSiteUrl', [threadId], callback);\n  }\n}\n"],"sourceRoot":""}